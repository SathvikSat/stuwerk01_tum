import "RISCVBase.core_desc"

InstructionSet RV32Zpn extends RV32I {
    architectural_state {
        unsigned<32> VXSAT_ADDR__ = 0x009;
        unsigned<32>& VXSAT_CSR__ = CSR[VXSAT_ADDR__];
    }
instructions {
//--------------
// ||CLZ||
//--------------
//Instruction description:-
// Starting from the most significant bits of the Rs1 register, this instruction counts the number of leading zero bits and writes the results to Rd. If the content of Rs1 is 0, the result is 32. If the content of Rs1 is -1, the result is 0.
//
//Instruction operation:-
//
//
// cnt = 0;
// for (i = 31 to 0) {
//   if (Rs1[i] == 0) {
//     cnt = cnt + 1;
//   } else {
//     break;
//   }
// }
// Rd = cnt;
//
//Instruction syntax:-   CLZ Rd, Rs1
//Instruction formate:-
//[cols="6*^.^"]
//|===
//l|31    25 l|24    20 l|19    15 l|14    12 l|11    7 l|6    0|0110000 |CLZ +00000 |Rs1 |001 |Rd|OP-IMM +0010011
    CLZ {
