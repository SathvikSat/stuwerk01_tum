[
    {
        "0": " Rd[0] = Rs2[0]? Rs1[0] : Rs3[0];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[1] = Rs2[1]? Rs1[1] : Rs3[1];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[2] = Rs2[2]? Rs1[2] : Rs3[2];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[3] = Rs2[3]? Rs1[3] : Rs3[3];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[4] = Rs2[4]? Rs1[4] : Rs3[4];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[5] = Rs2[5]? Rs1[5] : Rs3[5];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[6] = Rs2[6]? Rs1[6] : Rs3[6];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[7] = Rs2[7]? Rs1[7] : Rs3[7];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[8] = Rs2[8]? Rs1[8] : Rs3[8];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[9] = Rs2[9]? Rs1[9] : Rs3[9];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[10] = Rs2[10]? Rs1[10] : Rs3[10];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[11] = Rs2[11]? Rs1[11] : Rs3[11];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[12] = Rs2[12]? Rs1[12] : Rs3[12];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[13] = Rs2[13]? Rs1[13] : Rs3[13];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[14] = Rs2[14]? Rs1[14] : Rs3[14];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[15] = Rs2[15]? Rs1[15] : Rs3[15];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[16] = Rs2[16]? Rs1[16] : Rs3[16];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[17] = Rs2[17]? Rs1[17] : Rs3[17];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[18] = Rs2[18]? Rs1[18] : Rs3[18];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[19] = Rs2[19]? Rs1[19] : Rs3[19];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[20] = Rs2[20]? Rs1[20] : Rs3[20];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[21] = Rs2[21]? Rs1[21] : Rs3[21];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[22] = Rs2[22]? Rs1[22] : Rs3[22];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[23] = Rs2[23]? Rs1[23] : Rs3[23];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[24] = Rs2[24]? Rs1[24] : Rs3[24];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[25] = Rs2[25]? Rs1[25] : Rs3[25];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[26] = Rs2[26]? Rs1[26] : Rs3[26];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[27] = Rs2[27]? Rs1[27] : Rs3[27];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[28] = Rs2[28]? Rs1[28] : Rs3[28];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[29] = Rs2[29]? Rs1[29] : Rs3[29];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[30] = Rs2[30]? Rs1[30] : Rs3[30];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[31] = Rs2[31]? Rs1[31] : Rs3[31];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[32] = Rs2[32]? Rs1[32] : Rs3[32];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[33] = Rs2[33]? Rs1[33] : Rs3[33];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[34] = Rs2[34]? Rs1[34] : Rs3[34];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[35] = Rs2[35]? Rs1[35] : Rs3[35];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[36] = Rs2[36]? Rs1[36] : Rs3[36];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[37] = Rs2[37]? Rs1[37] : Rs3[37];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[38] = Rs2[38]? Rs1[38] : Rs3[38];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[39] = Rs2[39]? Rs1[39] : Rs3[39];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[40] = Rs2[40]? Rs1[40] : Rs3[40];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[41] = Rs2[41]? Rs1[41] : Rs3[41];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[42] = Rs2[42]? Rs1[42] : Rs3[42];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[43] = Rs2[43]? Rs1[43] : Rs3[43];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[44] = Rs2[44]? Rs1[44] : Rs3[44];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[45] = Rs2[45]? Rs1[45] : Rs3[45];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[46] = Rs2[46]? Rs1[46] : Rs3[46];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[47] = Rs2[47]? Rs1[47] : Rs3[47];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[48] = Rs2[48]? Rs1[48] : Rs3[48];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[49] = Rs2[49]? Rs1[49] : Rs3[49];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[50] = Rs2[50]? Rs1[50] : Rs3[50];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[51] = Rs2[51]? Rs1[51] : Rs3[51];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[52] = Rs2[52]? Rs1[52] : Rs3[52];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[53] = Rs2[53]? Rs1[53] : Rs3[53];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[54] = Rs2[54]? Rs1[54] : Rs3[54];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[55] = Rs2[55]? Rs1[55] : Rs3[55];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[56] = Rs2[56]? Rs1[56] : Rs3[56];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[57] = Rs2[57]? Rs1[57] : Rs3[57];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[58] = Rs2[58]? Rs1[58] : Rs3[58];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[59] = Rs2[59]? Rs1[59] : Rs3[59];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[60] = Rs2[60]? Rs1[60] : Rs3[60];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[61] = Rs2[61]? Rs1[61] : Rs3[61];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[62] = Rs2[62]? Rs1[62] : Rs3[62];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[63] = Rs2[63]? Rs1[63] : Rs3[63];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "Rd.H[0]": " Rs1.H[0].B[0]::Rs1.H[0].B[1]",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "Rd.H[1]": " Rs1.H[1].B[0]::Rs1.H[1].B[1]",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "Rd.H[2]": " Rs1.H[2].B[0]::Rs1.H[2].B[1]",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "Rd.H[3]": " Rs1.H[3].B[0]::Rs1.H[3].B[1]",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.B[0] = Rs1.B[0] + Rs2.B[0];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = Rs1.B[1] + Rs2.B[1];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = Rs1.B[2] + Rs2.B[2];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = Rs1.B[3] + Rs2.B[3];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = Rs1.B[4] + Rs2.B[4];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = Rs1.B[5] + Rs2.B[5];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = Rs1.B[6] + Rs2.B[6];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = Rs1.B[7] + Rs2.B[7];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.H[0] = Rs1.H[0] + Rs2.H[0];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[1] = Rs1.H[1] + Rs2.H[1];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[2] = Rs1.H[2] + Rs2.H[2];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[3] = Rs1.H[3] + Rs2.H[3];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " snum[0] = Rs1.B[0];",
        "1": " cnt[0] = 0;",
        "2": " for (i = 6 to 0) {",
        "3": "   if (snum[0](i) == snum[0](7)) {",
        "4": "     cnt[0] = cnt[0] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[0] = cnt[0];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[1] = Rs1.B[1];",
        "1": " cnt[1] = 0;",
        "2": " for (i = 6 to 0) {",
        "3": "   if (snum[1](i) == snum[1](7)) {",
        "4": "     cnt[1] = cnt[1] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[1] = cnt[1];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[2] = Rs1.B[2];",
        "1": " cnt[2] = 0;",
        "2": " for (i = 6 to 0) {",
        "3": "   if (snum[2](i) == snum[2](7)) {",
        "4": "     cnt[2] = cnt[2] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[2] = cnt[2];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[3] = Rs1.B[3];",
        "1": " cnt[3] = 0;",
        "2": " for (i = 6 to 0) {",
        "3": "   if (snum[3](i) == snum[3](7)) {",
        "4": "     cnt[3] = cnt[3] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[3] = cnt[3];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[4] = Rs1.B[4];",
        "1": " cnt[4] = 0;",
        "2": " for (i = 6 to 0) {",
        "3": "   if (snum[4](i) == snum[4](7)) {",
        "4": "     cnt[4] = cnt[4] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[4] = cnt[4];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[5] = Rs1.B[5];",
        "1": " cnt[5] = 0;",
        "2": " for (i = 6 to 0) {",
        "3": "   if (snum[5](i) == snum[5](7)) {",
        "4": "     cnt[5] = cnt[5] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[5] = cnt[5];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[6] = Rs1.B[6];",
        "1": " cnt[6] = 0;",
        "2": " for (i = 6 to 0) {",
        "3": "   if (snum[6](i) == snum[6](7)) {",
        "4": "     cnt[6] = cnt[6] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[6] = cnt[6];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[7] = Rs1.B[7];",
        "1": " cnt[7] = 0;",
        "2": " for (i = 6 to 0) {",
        "3": "   if (snum[7](i) == snum[7](7)) {",
        "4": "     cnt[7] = cnt[7] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[7] = cnt[7];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[0] = Rs1.H[0];",
        "1": " cnt[0] = 0;",
        "2": " for (i = 14 to 0) {",
        "3": "   if (snum[0](i) == snum[0](15)) {",
        "4": "     cnt[0] = cnt[0] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.H[0] = cnt[0];",
        "10": " for RV32: x=1..0",
        "11": " for RV64: x=3..0"
    },
    {
        "0": " snum[1] = Rs1.H[1];",
        "1": " cnt[1] = 0;",
        "2": " for (i = 14 to 0) {",
        "3": "   if (snum[1](i) == snum[1](15)) {",
        "4": "     cnt[1] = cnt[1] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.H[1] = cnt[1];",
        "10": " for RV32: x=1..0",
        "11": " for RV64: x=3..0"
    },
    {
        "0": " snum[2] = Rs1.H[2];",
        "1": " cnt[2] = 0;",
        "2": " for (i = 14 to 0) {",
        "3": "   if (snum[2](i) == snum[2](15)) {",
        "4": "     cnt[2] = cnt[2] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.H[2] = cnt[2];",
        "10": " for RV32: x=1..0",
        "11": " for RV64: x=3..0"
    },
    {
        "0": " snum[3] = Rs1.H[3];",
        "1": " cnt[3] = 0;",
        "2": " for (i = 14 to 0) {",
        "3": "   if (snum[3](i) == snum[3](15)) {",
        "4": "     cnt[3] = cnt[3] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.H[3] = cnt[3];",
        "10": " for RV32: x=1..0",
        "11": " for RV64: x=3..0"
    },
    {
        "0": " snum[0] = Rs1.W[0];",
        "1": " cnt[0] = 0;",
        "2": " for (i = 30 to 0) {",
        "3": "   if (snum[0](i) == snum[0](31)) {",
        "4": "     cnt[0] = cnt[0] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.W[0] = cnt[0];",
        "10": " for RV32: x=0",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " snum[1] = Rs1.W[1];",
        "1": " cnt[1] = 0;",
        "2": " for (i = 30 to 0) {",
        "3": "   if (snum[1](i) == snum[1](31)) {",
        "4": "     cnt[1] = cnt[1] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.W[1] = cnt[1];",
        "10": " for RV32: x=0",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " snum[0] = Rs1.B[0];",
        "1": " cnt[0] = 0;",
        "2": " for (i = 7 to 0) {",
        "3": "   if (snum[0](i) == 0) {",
        "4": "     cnt[0] = cnt[0] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[0] = cnt[0];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[1] = Rs1.B[1];",
        "1": " cnt[1] = 0;",
        "2": " for (i = 7 to 0) {",
        "3": "   if (snum[1](i) == 0) {",
        "4": "     cnt[1] = cnt[1] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[1] = cnt[1];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[2] = Rs1.B[2];",
        "1": " cnt[2] = 0;",
        "2": " for (i = 7 to 0) {",
        "3": "   if (snum[2](i) == 0) {",
        "4": "     cnt[2] = cnt[2] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[2] = cnt[2];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[3] = Rs1.B[3];",
        "1": " cnt[3] = 0;",
        "2": " for (i = 7 to 0) {",
        "3": "   if (snum[3](i) == 0) {",
        "4": "     cnt[3] = cnt[3] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[3] = cnt[3];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[4] = Rs1.B[4];",
        "1": " cnt[4] = 0;",
        "2": " for (i = 7 to 0) {",
        "3": "   if (snum[4](i) == 0) {",
        "4": "     cnt[4] = cnt[4] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[4] = cnt[4];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[5] = Rs1.B[5];",
        "1": " cnt[5] = 0;",
        "2": " for (i = 7 to 0) {",
        "3": "   if (snum[5](i) == 0) {",
        "4": "     cnt[5] = cnt[5] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[5] = cnt[5];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[6] = Rs1.B[6];",
        "1": " cnt[6] = 0;",
        "2": " for (i = 7 to 0) {",
        "3": "   if (snum[6](i) == 0) {",
        "4": "     cnt[6] = cnt[6] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[6] = cnt[6];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[7] = Rs1.B[7];",
        "1": " cnt[7] = 0;",
        "2": " for (i = 7 to 0) {",
        "3": "   if (snum[7](i) == 0) {",
        "4": "     cnt[7] = cnt[7] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.B[7] = cnt[7];",
        "10": " for RV32: x=3..0",
        "11": " for RV64: x=7..0"
    },
    {
        "0": " snum[0] = Rs1.H[0];",
        "1": " cnt[0] = 0;",
        "2": " for (i = 15 to 0) {",
        "3": "   if (snum[0](i) == 0) {",
        "4": "     cnt[0] = cnt[0] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.H[0] = cnt[0];",
        "10": " for RV32: x=1..0",
        "11": " for RV64: x=3..0"
    },
    {
        "0": " snum[1] = Rs1.H[1];",
        "1": " cnt[1] = 0;",
        "2": " for (i = 15 to 0) {",
        "3": "   if (snum[1](i) == 0) {",
        "4": "     cnt[1] = cnt[1] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.H[1] = cnt[1];",
        "10": " for RV32: x=1..0",
        "11": " for RV64: x=3..0"
    },
    {
        "0": " snum[2] = Rs1.H[2];",
        "1": " cnt[2] = 0;",
        "2": " for (i = 15 to 0) {",
        "3": "   if (snum[2](i) == 0) {",
        "4": "     cnt[2] = cnt[2] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.H[2] = cnt[2];",
        "10": " for RV32: x=1..0",
        "11": " for RV64: x=3..0"
    },
    {
        "0": " snum[3] = Rs1.H[3];",
        "1": " cnt[3] = 0;",
        "2": " for (i = 15 to 0) {",
        "3": "   if (snum[3](i) == 0) {",
        "4": "     cnt[3] = cnt[3] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.H[3] = cnt[3];",
        "10": " for RV32: x=1..0",
        "11": " for RV64: x=3..0"
    },
    {
        "0": " snum[0] = Rs1.W[0];",
        "1": " cnt[0] = 0;",
        "2": " for (i = 31 to 0) {",
        "3": "   if (snum[0](i) == 0) {",
        "4": "     cnt[0] = cnt[0] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.W[0] = cnt[0];",
        "10": " for RV32: x=0",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " snum[1] = Rs1.W[1];",
        "1": " cnt[1] = 0;",
        "2": " for (i = 31 to 0) {",
        "3": "   if (snum[1](i) == 0) {",
        "4": "     cnt[1] = cnt[1] + 1;",
        "5": "   } else {",
        "6": "     break;",
        "7": "   }",
        "8": " }",
        "9": " Rd.W[1] = cnt[1];",
        "10": " for RV32: x=0",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " Rd.B[0] = (Rs1.B[0] == Rs2.B[0])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = (Rs1.B[1] == Rs2.B[1])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = (Rs1.B[2] == Rs2.B[2])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = (Rs1.B[3] == Rs2.B[3])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = (Rs1.B[4] == Rs2.B[4])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = (Rs1.B[5] == Rs2.B[5])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = (Rs1.B[6] == Rs2.B[6])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = (Rs1.B[7] == Rs2.B[7])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.H[0] = (Rs1.H[0] == Rs2.H[0])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[1] = (Rs1.H[1] == Rs2.H[1])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[2] = (Rs1.H[2] == Rs2.H[2])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[3] = (Rs1.H[3] == Rs2.H[3])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.W[0].H[1] = Rs1.W[0].H[1] + Rs2.W[0].H[0];",
        "1": " Rd.W[0].H[0] = Rs1.W[0].H[0] \u2013 Rs2.W[0].H[1];",
        "2": " for RV32, x=0",
        "3": " for RV64, x=1..0"
    },
    {
        "0": " Rd.W[1].H[1] = Rs1.W[1].H[1] + Rs2.W[1].H[0];",
        "1": " Rd.W[1].H[0] = Rs1.W[1].H[0] \u2013 Rs2.W[1].H[1];",
        "2": " for RV32, x=0",
        "3": " for RV64, x=1..0"
    },
    {
        "0": " Rd.W[0].H[1] = Rs1.W[0].H[1] - Rs2.W[0].H[0];",
        "1": " Rd.W[0].H[0] = Rs1.W[0].H[0] + Rs2.W[0].H[1];",
        "2": " for RV32, x=0",
        "3": " for RV64, x=1..0",
        "4": ""
    },
    {
        "0": " Rd.W[1].H[1] = Rs1.W[1].H[1] - Rs2.W[1].H[0];",
        "1": " Rd.W[1].H[0] = Rs1.W[1].H[0] + Rs2.W[1].H[1];",
        "2": " for RV32, x=0",
        "3": " for RV64, x=1..0",
        "4": ""
    },
    {
        "0": " src = Rs1.B[0];",
        "1": " if (src == 0x80) {",
        "2": "   src = 0x7f;",
        "3": "   OV = 1;",
        "4": " } else if (src[7] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.B[0] = src;",
        "8": " for RV32: x=3..0,",
        "9": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[1];",
        "1": " if (src == 0x80) {",
        "2": "   src = 0x7f;",
        "3": "   OV = 1;",
        "4": " } else if (src[7] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.B[1] = src;",
        "8": " for RV32: x=3..0,",
        "9": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[2];",
        "1": " if (src == 0x80) {",
        "2": "   src = 0x7f;",
        "3": "   OV = 1;",
        "4": " } else if (src[7] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.B[2] = src;",
        "8": " for RV32: x=3..0,",
        "9": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[3];",
        "1": " if (src == 0x80) {",
        "2": "   src = 0x7f;",
        "3": "   OV = 1;",
        "4": " } else if (src[7] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.B[3] = src;",
        "8": " for RV32: x=3..0,",
        "9": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[4];",
        "1": " if (src == 0x80) {",
        "2": "   src = 0x7f;",
        "3": "   OV = 1;",
        "4": " } else if (src[7] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.B[4] = src;",
        "8": " for RV32: x=3..0,",
        "9": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[5];",
        "1": " if (src == 0x80) {",
        "2": "   src = 0x7f;",
        "3": "   OV = 1;",
        "4": " } else if (src[7] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.B[5] = src;",
        "8": " for RV32: x=3..0,",
        "9": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[6];",
        "1": " if (src == 0x80) {",
        "2": "   src = 0x7f;",
        "3": "   OV = 1;",
        "4": " } else if (src[7] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.B[6] = src;",
        "8": " for RV32: x=3..0,",
        "9": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[7];",
        "1": " if (src == 0x80) {",
        "2": "   src = 0x7f;",
        "3": "   OV = 1;",
        "4": " } else if (src[7] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.B[7] = src;",
        "8": " for RV32: x=3..0,",
        "9": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.H[0];",
        "1": " if (src == 0x8000) {",
        "2": "   src = 0x7fff;",
        "3": "   OV = 1;",
        "4": " } else if (src[15] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.H[0] = src;",
        "8": " for RV32: x=1..0,",
        "9": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.H[1];",
        "1": " if (src == 0x8000) {",
        "2": "   src = 0x7fff;",
        "3": "   OV = 1;",
        "4": " } else if (src[15] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.H[1] = src;",
        "8": " for RV32: x=1..0,",
        "9": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.H[2];",
        "1": " if (src == 0x8000) {",
        "2": "   src = 0x7fff;",
        "3": "   OV = 1;",
        "4": " } else if (src[15] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.H[2] = src;",
        "8": " for RV32: x=1..0,",
        "9": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.H[3];",
        "1": " if (src == 0x8000) {",
        "2": "   src = 0x7fff;",
        "3": "   OV = 1;",
        "4": " } else if (src[15] == 1)",
        "5": "   src = -src;",
        "6": " }",
        "7": " Rd.H[3] = src;",
        "8": " for RV32: x=1..0,",
        "9": " for RV64: x=3..0"
    },
    {
        "0": " a9[0] = signed<9>(Rs1.B[0])",
        "1": " b9[0] = signed<9>(Rs2.B[0])",
        "2": " res9[0] = a9[0] + b9[0];",
        "3": " if (res9[0] s> (2^7)-1) {",
        "4": "   res9[0] = 127;",
        "5": "   OV = 1;",
        "6": " } else if (res9[0] s< -2^7) {",
        "7": "   res9[0] = -128;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.B[0] = res9[0].B[0];",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " a9[1] = signed<9>(Rs1.B[1])",
        "1": " b9[1] = signed<9>(Rs2.B[1])",
        "2": " res9[1] = a9[1] + b9[1];",
        "3": " if (res9[1] s> (2^7)-1) {",
        "4": "   res9[1] = 127;",
        "5": "   OV = 1;",
        "6": " } else if (res9[1] s< -2^7) {",
        "7": "   res9[1] = -128;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.B[1] = res9[1].B[0];",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " a9[2] = signed<9>(Rs1.B[2])",
        "1": " b9[2] = signed<9>(Rs2.B[2])",
        "2": " res9[2] = a9[2] + b9[2];",
        "3": " if (res9[2] s> (2^7)-1) {",
        "4": "   res9[2] = 127;",
        "5": "   OV = 1;",
        "6": " } else if (res9[2] s< -2^7) {",
        "7": "   res9[2] = -128;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.B[2] = res9[2].B[0];",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " a9[3] = signed<9>(Rs1.B[3])",
        "1": " b9[3] = signed<9>(Rs2.B[3])",
        "2": " res9[3] = a9[3] + b9[3];",
        "3": " if (res9[3] s> (2^7)-1) {",
        "4": "   res9[3] = 127;",
        "5": "   OV = 1;",
        "6": " } else if (res9[3] s< -2^7) {",
        "7": "   res9[3] = -128;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.B[3] = res9[3].B[0];",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " a9[4] = signed<9>(Rs1.B[4])",
        "1": " b9[4] = signed<9>(Rs2.B[4])",
        "2": " res9[4] = a9[4] + b9[4];",
        "3": " if (res9[4] s> (2^7)-1) {",
        "4": "   res9[4] = 127;",
        "5": "   OV = 1;",
        "6": " } else if (res9[4] s< -2^7) {",
        "7": "   res9[4] = -128;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.B[4] = res9[4].B[0];",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " a9[5] = signed<9>(Rs1.B[5])",
        "1": " b9[5] = signed<9>(Rs2.B[5])",
        "2": " res9[5] = a9[5] + b9[5];",
        "3": " if (res9[5] s> (2^7)-1) {",
        "4": "   res9[5] = 127;",
        "5": "   OV = 1;",
        "6": " } else if (res9[5] s< -2^7) {",
        "7": "   res9[5] = -128;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.B[5] = res9[5].B[0];",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " a9[6] = signed<9>(Rs1.B[6])",
        "1": " b9[6] = signed<9>(Rs2.B[6])",
        "2": " res9[6] = a9[6] + b9[6];",
        "3": " if (res9[6] s> (2^7)-1) {",
        "4": "   res9[6] = 127;",
        "5": "   OV = 1;",
        "6": " } else if (res9[6] s< -2^7) {",
        "7": "   res9[6] = -128;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.B[6] = res9[6].B[0];",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " a9[7] = signed<9>(Rs1.B[7])",
        "1": " b9[7] = signed<9>(Rs2.B[7])",
        "2": " res9[7] = a9[7] + b9[7];",
        "3": " if (res9[7] s> (2^7)-1) {",
        "4": "   res9[7] = 127;",
        "5": "   OV = 1;",
        "6": " } else if (res9[7] s< -2^7) {",
        "7": "   res9[7] = -128;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.B[7] = res9[7].B[0];",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " a17[0] = signed<17>(Rs1.H[0])",
        "1": " b17[0] = signed<17>(Rs2.H[0])",
        "2": " res17[0] = a17[0] + b17[0];",
        "3": " if (res17[0] s> (2^15)-1) {",
        "4": "   res17[0] = 32767;",
        "5": "   OV = 1;",
        "6": " } else if (res17[0] s< -(2^15)) {",
        "7": "   res17[0] = -32768;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.H[0] = res17[0].H[0];",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " a17[1] = signed<17>(Rs1.H[1])",
        "1": " b17[1] = signed<17>(Rs2.H[1])",
        "2": " res17[1] = a17[1] + b17[1];",
        "3": " if (res17[1] s> (2^15)-1) {",
        "4": "   res17[1] = 32767;",
        "5": "   OV = 1;",
        "6": " } else if (res17[1] s< -(2^15)) {",
        "7": "   res17[1] = -32768;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.H[1] = res17[1].H[0];",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " a17[2] = signed<17>(Rs1.H[2])",
        "1": " b17[2] = signed<17>(Rs2.H[2])",
        "2": " res17[2] = a17[2] + b17[2];",
        "3": " if (res17[2] s> (2^15)-1) {",
        "4": "   res17[2] = 32767;",
        "5": "   OV = 1;",
        "6": " } else if (res17[2] s< -(2^15)) {",
        "7": "   res17[2] = -32768;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.H[2] = res17[2].H[0];",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " a17[3] = signed<17>(Rs1.H[3])",
        "1": " b17[3] = signed<17>(Rs2.H[3])",
        "2": " res17[3] = a17[3] + b17[3];",
        "3": " if (res17[3] s> (2^15)-1) {",
        "4": "   res17[3] = 32767;",
        "5": "   OV = 1;",
        "6": " } else if (res17[3] s< -(2^15)) {",
        "7": "   res17[3] = -32768;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.H[3] = res17[3].H[0];",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " a17[0] = signed<17>(Rs1.W[0].H[1])",
        "1": " b17[0] = signed<17>(Rs2.W[0].H[0])",
        "2": " c17[0] = signed<17>(Rs1.W[0].H[0])",
        "3": " d17[0] = signed<17>(Rs2.W[0].H[1])",
        "4": " res1 = a17[0] + b17[0];",
        "5": " res2 = c17[0] \u2013 d17[0];",
        "6": " for (res in [res1, res2]) {",
        "7": "   if (res s> (2^15)-1) {",
        "8": "     res = (2^15)-1;",
        "9": "     OV = 1;",
        "10": "   } else if (res s< -2^15) {",
        "11": "     res = -2^15;",
        "12": "     OV = 1;",
        "13": "   }",
        "14": " }",
        "15": " Rd.W[0].H[1] = res1.H[0];",
        "16": " Rd.W[0].H[0] = res2.H[0];",
        "17": " for RV32, x=0",
        "18": " for RV64, x=1..0",
        "19": ""
    },
    {
        "0": " a17[1] = signed<17>(Rs1.W[1].H[1])",
        "1": " b17[1] = signed<17>(Rs2.W[1].H[0])",
        "2": " c17[1] = signed<17>(Rs1.W[1].H[0])",
        "3": " d17[1] = signed<17>(Rs2.W[1].H[1])",
        "4": " res1 = a17[1] + b17[1];",
        "5": " res2 = c17[1] \u2013 d17[1];",
        "6": " for (res in [res1, res2]) {",
        "7": "   if (res s> (2^15)-1) {",
        "8": "     res = (2^15)-1;",
        "9": "     OV = 1;",
        "10": "   } else if (res s< -2^15) {",
        "11": "     res = -2^15;",
        "12": "     OV = 1;",
        "13": "   }",
        "14": " }",
        "15": " Rd.W[1].H[1] = res1.H[0];",
        "16": " Rd.W[1].H[0] = res2.H[0];",
        "17": " for RV32, x=0",
        "18": " for RV64, x=1..0",
        "19": ""
    },
    {
        "0": " a17[0] = signed<17>(Rs1.W[0].H[1])",
        "1": " b17[0] = signed<17>(Rs2.W[0].H[0])",
        "2": " c17[0] = signed<17>(Rs1.W[0].H[0])",
        "3": " d17[0] = signed<17>(Rs2.W[0].H[1])",
        "4": " res1 = a17[0] - b17[0];",
        "5": " res2 = c17[0] + d17[0];",
        "6": " for (res in [res1, res2]) {",
        "7": "   if (res s> (2^15)-1) {",
        "8": "     res = (2^15)-1;",
        "9": "     OV = 1;",
        "10": "   } else if (res s< -2^15) {",
        "11": "     res = -2^15;",
        "12": "     OV = 1;",
        "13": "   }",
        "14": " }",
        "15": " Rd.W[0].H[1] = res1.H[0];",
        "16": " Rd.W[0].H[0] = res2.H[0];",
        "17": " for RV32, x=0",
        "18": " for RV64, x=1..0"
    },
    {
        "0": " a17[1] = signed<17>(Rs1.W[1].H[1])",
        "1": " b17[1] = signed<17>(Rs2.W[1].H[0])",
        "2": " c17[1] = signed<17>(Rs1.W[1].H[0])",
        "3": " d17[1] = signed<17>(Rs2.W[1].H[1])",
        "4": " res1 = a17[1] - b17[1];",
        "5": " res2 = c17[1] + d17[1];",
        "6": " for (res in [res1, res2]) {",
        "7": "   if (res s> (2^15)-1) {",
        "8": "     res = (2^15)-1;",
        "9": "     OV = 1;",
        "10": "   } else if (res s< -2^15) {",
        "11": "     res = -2^15;",
        "12": "     OV = 1;",
        "13": "   }",
        "14": " }",
        "15": " Rd.W[1].H[1] = res1.H[0];",
        "16": " Rd.W[1].H[0] = res2.H[0];",
        "17": " for RV32, x=0",
        "18": " for RV64, x=1..0"
    },
    {
        "0": " mul32[0] = Rs1.W[0].H[0] s* Rs2.W[0].H[0]; // KMABB",
        "1": " mul32[0] = Rs1.W[0].H[0] s* Rs2.W[0].H[1]; // KMABT",
        "2": " mul32[0] = Rs1.W[0].H[1] s* Rs2.W[0].H[1]; // KMATT",
        "3": "",
        "4": " res33[0] = signed<33>(mul32[0])",
        "5": " if (res33[0] s> (2^31)-1) {",
        "6": "   res33[0] = (2^31)-1;",
        "7": "   OV = 1;",
        "8": " } else if (res33[0] s< -2^31) {",
        "9": "   res33[0] = -2^31;",
        "10": "   OV = 1;",
        "11": " }",
        "12": " Rd.W[0] = res33[0].W[0];",
        "13": " for RV32: x=0",
        "14": " for RV64: x=1..0"
    },
    {
        "0": " mul32[1] = Rs1.W[1].H[0] s* Rs2.W[1].H[0]; // KMABB",
        "1": " mul32[1] = Rs1.W[1].H[0] s* Rs2.W[1].H[1]; // KMABT",
        "2": " mul32[1] = Rs1.W[1].H[1] s* Rs2.W[1].H[1]; // KMATT",
        "3": "",
        "4": " res33[1] = signed<33>(mul32[1])",
        "5": " if (res33[1] s> (2^31)-1) {",
        "6": "   res33[1] = (2^31)-1;",
        "7": "   OV = 1;",
        "8": " } else if (res33[1] s< -2^31) {",
        "9": "   res33[1] = -2^31;",
        "10": "   OV = 1;",
        "11": " }",
        "12": " Rd.W[1] = res33[1].W[0];",
        "13": " for RV32: x=0",
        "14": " for RV64: x=1..0"
    },
    {
        "0": " mula32[0] = Rs1.W[0].H[1] s* Rs2.W[0].H[1]; // KMADA",
        "1": " mulb32[0] = Rs1.W[0].H[0] s* Rs2.W[0].H[0]; //",
        "2": " mula32[0] = Rs1.W[0].H[1] s* Rs2.W[0].H[0]; // KMAXDA",
        "3": " mulb32[0] = Rs1.W[0].H[0] s* Rs2.W[0].H[1]; //",
        "4": "",
        "5": " res34[0] = signed<34>(mulb32[0])",
        "6": " if (res34[0] s> (2^31)-1) {",
        "7": "   res34[0] = (2^31)-1;",
        "8": "   OV = 1;",
        "9": " } else if (res34[0] s< -2^31) {",
        "10": "   res34[0] = -2^31;",
        "11": "   OV = 1;",
        "12": " }",
        "13": " Rd.W[0] = res34[0].W[0];",
        "14": " for RV32: x=0",
        "15": " for RV64: x=1..0"
    },
    {
        "0": " mula32[1] = Rs1.W[1].H[1] s* Rs2.W[1].H[1]; // KMADA",
        "1": " mulb32[1] = Rs1.W[1].H[0] s* Rs2.W[1].H[0]; //",
        "2": " mula32[1] = Rs1.W[1].H[1] s* Rs2.W[1].H[0]; // KMAXDA",
        "3": " mulb32[1] = Rs1.W[1].H[0] s* Rs2.W[1].H[1]; //",
        "4": "",
        "5": " res34[1] = signed<34>(mulb32[1])",
        "6": " if (res34[1] s> (2^31)-1) {",
        "7": "   res34[1] = (2^31)-1;",
        "8": "   OV = 1;",
        "9": " } else if (res34[1] s< -2^31) {",
        "10": "   res34[1] = -2^31;",
        "11": "   OV = 1;",
        "12": " }",
        "13": " Rd.W[1] = res34[1].W[0];",
        "14": " for RV32: x=0",
        "15": " for RV64: x=1..0"
    },
    {
        "0": " res34[0] = signed<34>(mulb32[0])",
        "1": " if (res34[0] s> (2^31)-1) {",
        "2": "   res34[0] = (2^31)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res34[0] s< -2^31) {",
        "5": "   res34[0] = -2^31;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.W[0] = res34[0].W[0];",
        "9": " for RV32: x=0",
        "10": " for RV64: x=1..0"
    },
    {
        "0": " res34[1] = signed<34>(mulb32[1])",
        "1": " if (res34[1] s> (2^31)-1) {",
        "2": "   res34[1] = (2^31)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res34[1] s< -2^31) {",
        "5": "   res34[1] = -2^31;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.W[1] = res34[1].W[0];",
        "9": " for RV32: x=0",
        "10": " for RV64: x=1..0"
    },
    {
        "0": " if ((Rs1.W[0] != 0x80008000) or (Rs2.W[0] != 0x80008000)) {",
        "1": "   // KMDA",
        "2": "   Rd.W[0] = (Rs1.W[0].H[1] s* Rs2.W[0].H[1]) + (Rs1.W[0].H[0] s* Rs2.W[0].H[0]);",
        "3": "   // KMXDA",
        "4": "   Rd.W[0] = (Rs1.W[0].H[1] s* Rs2.W[0].H[0]) + (Rs1.W[0].H[0] s* Rs2.W[0].H[1]);",
        "5": " } else {",
        "6": "   Rd.W[0] = 0x7fffffff;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " for RV32: x=0",
        "10": " for RV64: x=1..0"
    },
    {
        "0": " if ((Rs1.W[1] != 0x80008000) or (Rs2.W[1] != 0x80008000)) {",
        "1": "   // KMDA",
        "2": "   Rd.W[1] = (Rs1.W[1].H[1] s* Rs2.W[1].H[1]) + (Rs1.W[1].H[0] s* Rs2.W[1].H[0]);",
        "3": "   // KMXDA",
        "4": "   Rd.W[1] = (Rs1.W[1].H[1] s* Rs2.W[1].H[0]) + (Rs1.W[1].H[0] s* Rs2.W[1].H[1]);",
        "5": " } else {",
        "6": "   Rd.W[1] = 0x7fffffff;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " for RV32: x=0",
        "10": " for RV64: x=1..0"
    },
    {
        "0": " Mres[0][63:0] = Rs1.W[0] * Rs2.W[0];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[0][32:0] = Mres[0][63:31] + 1;",
        "3": "   res33[0] = signed<33>(Round[0][32:1])",
        "4": " } else {",
        "5": "   res33[0] = signed<33>(Mres[0][63:32])",
        "6": " }",
        "7": " if (res33[0] s> (2^31)-1) {",
        "8": "   res33[0] = (2^31)-1;",
        "9": "   OV = 1;",
        "10": " } else if (res33[0] s< -2^31) {",
        "11": "   res33[0] = -2^31;",
        "12": "   OV = 1;",
        "13": " }",
        "14": " Rd.W[0] = res33[0].W[0];",
        "15": " for RV32: x=0",
        "16": " for RV64: x=1..0"
    },
    {
        "0": " Mres[1][63:0] = Rs1.W[1] * Rs2.W[1];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[1][32:0] = Mres[1][63:31] + 1;",
        "3": "   res33[1] = signed<33>(Round[1][32:1])",
        "4": " } else {",
        "5": "   res33[1] = signed<33>(Mres[1][63:32])",
        "6": " }",
        "7": " if (res33[1] s> (2^31)-1) {",
        "8": "   res33[1] = (2^31)-1;",
        "9": "   OV = 1;",
        "10": " } else if (res33[1] s< -2^31) {",
        "11": "   res33[1] = -2^31;",
        "12": "   OV = 1;",
        "13": " }",
        "14": " Rd.W[1] = res33[1].W[0];",
        "15": " for RV32: x=0",
        "16": " for RV64: x=1..0"
    },
    {
        "0": " Mres[0][47:0] = Rs1.W[0] s* Rs2.W[0].H[0];",
        "1": " if ('.u' form) {",
        "2": "   Round[0][32:0] = Mres[0][47:15] + 1;",
        "3": "   res33[0] = signed<33>(Round[0][32:1])",
        "4": " } else {",
        "5": "   res33[0] = signed<33>(Mres[0][47:16])",
        "6": " }",
        "7": " if (res33[0] s> (2^31)-1) {",
        "8": "   res33[0] = (2^31)-1;",
        "9": "   OV = 1;",
        "10": " } else if (res33[0] s< -2^31) {",
        "11": "   res33[0] = -2^31;",
        "12": "   OV = 1;",
        "13": " }",
        "14": " Rd.W[0] = res33[0].W[0];",
        "15": " for RV32: x=0",
        "16": " for RV64: x=1..0"
    },
    {
        "0": " Mres[1][47:0] = Rs1.W[1] s* Rs2.W[1].H[0];",
        "1": " if ('.u' form) {",
        "2": "   Round[1][32:0] = Mres[1][47:15] + 1;",
        "3": "   res33[1] = signed<33>(Round[1][32:1])",
        "4": " } else {",
        "5": "   res33[1] = signed<33>(Mres[1][47:16])",
        "6": " }",
        "7": " if (res33[1] s> (2^31)-1) {",
        "8": "   res33[1] = (2^31)-1;",
        "9": "   OV = 1;",
        "10": " } else if (res33[1] s< -2^31) {",
        "11": "   res33[1] = -2^31;",
        "12": "   OV = 1;",
        "13": " }",
        "14": " Rd.W[1] = res33[1].W[0];",
        "15": " for RV32: x=0",
        "16": " for RV64: x=1..0"
    },
    {
        "0": " if ((Rs1.W[0] != 0x80000000) or (Rs2.W[0].H[0] != 0x8000)) {",
        "1": "   Mres[0][47:0] = Rs1.W[0] s* Rs2.W[0].H[0];",
        "2": "   if ('.u' form) {",
        "3": "     Mres[0][47:14] = Mres[0][47:14] + 1;",
        "4": "   }",
        "5": "   addop.W[0] = Mres[0][46:15]; // doubling",
        "6": " } else {",
        "7": "   addop.W[0] = 0x7fffffff;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " res33[0] = signed<33>(addop.W[0])",
        "11": " if (res33[0] s> (2^31)-1) {",
        "12": "   res33[0] = (2^31)-1;",
        "13": "   OV = 1;",
        "14": " } else if (res33[0] s< -2^31) {",
        "15": "   res33[0] = -2^31;",
        "16": "   OV = 1;",
        "17": " }",
        "18": " Rd.W[0] = res33[0].W[0];",
        "19": " for RV32: x=0",
        "20": " for RV64: x=1..0"
    },
    {
        "0": " if ((Rs1.W[1] != 0x80000000) or (Rs2.W[1].H[0] != 0x8000)) {",
        "1": "   Mres[1][47:0] = Rs1.W[1] s* Rs2.W[1].H[0];",
        "2": "   if ('.u' form) {",
        "3": "     Mres[1][47:14] = Mres[1][47:14] + 1;",
        "4": "   }",
        "5": "   addop.W[1] = Mres[1][46:15]; // doubling",
        "6": " } else {",
        "7": "   addop.W[1] = 0x7fffffff;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " res33[1] = signed<33>(addop.W[1])",
        "11": " if (res33[1] s> (2^31)-1) {",
        "12": "   res33[1] = (2^31)-1;",
        "13": "   OV = 1;",
        "14": " } else if (res33[1] s< -2^31) {",
        "15": "   res33[1] = -2^31;",
        "16": "   OV = 1;",
        "17": " }",
        "18": " Rd.W[1] = res33[1].W[0];",
        "19": " for RV32: x=0",
        "20": " for RV64: x=1..0"
    },
    {
        "0": " Mres[0][47:0] = Rs1.W[0] * Rs2.W[0].H[1];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[0][32:0] = Mres[0][47:15] + 1;",
        "3": "   res33[0] = signed<33>(Round[0][32:1])",
        "4": " } else {",
        "5": "   res33[0] = signed<33>(Mres[0][47:16])",
        "6": " }",
        "7": " if (res33[0] s> (2^31)-1) {",
        "8": "   res33[0] = (2^31)-1;",
        "9": "   OV = 1;",
        "10": " } else if (res33[0] s< -2^31) {",
        "11": "   res33[0] = -2^31;",
        "12": "   OV = 1;",
        "13": " }",
        "14": " Rd.W[0] = res33[0].W[0];",
        "15": " for RV32: x=0",
        "16": " for RV64: x=1..0"
    },
    {
        "0": " Mres[1][47:0] = Rs1.W[1] * Rs2.W[1].H[1];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[1][32:0] = Mres[1][47:15] + 1;",
        "3": "   res33[1] = signed<33>(Round[1][32:1])",
        "4": " } else {",
        "5": "   res33[1] = signed<33>(Mres[1][47:16])",
        "6": " }",
        "7": " if (res33[1] s> (2^31)-1) {",
        "8": "   res33[1] = (2^31)-1;",
        "9": "   OV = 1;",
        "10": " } else if (res33[1] s< -2^31) {",
        "11": "   res33[1] = -2^31;",
        "12": "   OV = 1;",
        "13": " }",
        "14": " Rd.W[1] = res33[1].W[0];",
        "15": " for RV32: x=0",
        "16": " for RV64: x=1..0"
    },
    {
        "0": " if ((Rs1.W[0] == 0x80000000) && (Rs2.W[0].H[1] == 0x8000)) {",
        "1": "   addop.W[0] = 0x7fffffff;",
        "2": "   OV = 1;",
        "3": " } else {",
        "4": "   Mres[0][47:0] = Rs1.W[0] s* Rs2.W[0].H[1];",
        "5": "   if (\u201c.u\u201d form) {",
        "6": "     Mres[0][47:14] = Mres[0][47:14] + 1;",
        "7": "   }",
        "8": "   addop.W[0] = Mres[0][46:15]; // doubling",
        "9": " }",
        "10": " res33[0] = signed<33>(addop.W[0])",
        "11": " if (res33[0] s> (2^31)-1) {",
        "12": "   res33[0] = (2^31)-1;",
        "13": "   OV = 1;",
        "14": " } else if (res33[0] s< -2^31) {",
        "15": "   res33[0] = -2^31;",
        "16": "   OV = 1;",
        "17": " }",
        "18": " Rd.W[0] = res33[0].W[0];",
        "19": " for RV32: x=0",
        "20": " for RV64: x=1..0"
    },
    {
        "0": " if ((Rs1.W[1] == 0x80000000) && (Rs2.W[1].H[1] == 0x8000)) {",
        "1": "   addop.W[1] = 0x7fffffff;",
        "2": "   OV = 1;",
        "3": " } else {",
        "4": "   Mres[1][47:0] = Rs1.W[1] s* Rs2.W[1].H[1];",
        "5": "   if (\u201c.u\u201d form) {",
        "6": "     Mres[1][47:14] = Mres[1][47:14] + 1;",
        "7": "   }",
        "8": "   addop.W[1] = Mres[1][46:15]; // doubling",
        "9": " }",
        "10": " res33[1] = signed<33>(addop.W[1])",
        "11": " if (res33[1] s> (2^31)-1) {",
        "12": "   res33[1] = (2^31)-1;",
        "13": "   OV = 1;",
        "14": " } else if (res33[1] s< -2^31) {",
        "15": "   res33[1] = -2^31;",
        "16": "   OV = 1;",
        "17": " }",
        "18": " Rd.W[1] = res33[1].W[0];",
        "19": " for RV32: x=0",
        "20": " for RV64: x=1..0"
    },
    {
        "0": " Mres[0][63:0] = Rs1.W[0] * Rs2.W[0];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[0][32:0] = Mres[0][63:31] + 1;",
        "3": "   res33[0] = signed<33>(Round[0][32:1])",
        "4": " } else {",
        "5": "   res33[0] = signed<33>(Mres[0][63:32])",
        "6": " }",
        "7": " if (res33[0] s> (2^31)-1) {",
        "8": "   res33[0] = (2^31)-1;",
        "9": "   OV = 1;",
        "10": " } else if (res33[0] s< -2^31) {",
        "11": "   res33[0] = -2^31;",
        "12": "   OV = 1;",
        "13": " }",
        "14": " Rd.W[0] = res33[0].W[0];",
        "15": " for RV32: x=0",
        "16": " for RV64: x=1..0"
    },
    {
        "0": " Mres[1][63:0] = Rs1.W[1] * Rs2.W[1];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[1][32:0] = Mres[1][63:31] + 1;",
        "3": "   res33[1] = signed<33>(Round[1][32:1])",
        "4": " } else {",
        "5": "   res33[1] = signed<33>(Mres[1][63:32])",
        "6": " }",
        "7": " if (res33[1] s> (2^31)-1) {",
        "8": "   res33[1] = (2^31)-1;",
        "9": "   OV = 1;",
        "10": " } else if (res33[1] s< -2^31) {",
        "11": "   res33[1] = -2^31;",
        "12": "   OV = 1;",
        "13": " }",
        "14": " Rd.W[1] = res33[1].W[0];",
        "15": " for RV32: x=0",
        "16": " for RV64: x=1..0"
    },
    {
        "0": " if ((Rs1.W[0] == 0x80000000) && (Rs2.W[0].H[0] == 0x8000)) {",
        "1": "   Rd.W[0] = 0x7fffffff;",
        "2": "   OV = 1;",
        "3": " } else {",
        "4": "   Mres[0][47:0] = Rs1.W[0] s* Rs2.W[0].H[0];",
        "5": "   if (\u201c.u\u201d form) {",
        "6": "     Round[0][32:0] = Mres[0][46:14] + 1;",
        "7": "     Rd.W[0] = Round[0][32:1];",
        "8": "   } else {",
        "9": "     Rd.W[0] = Mres[0][46:15];",
        "10": "   }",
        "11": " }",
        "12": " for RV32: x=0",
        "13": " for RV64: x=1..0"
    },
    {
        "0": " if ((Rs1.W[1] == 0x80000000) && (Rs2.W[1].H[0] == 0x8000)) {",
        "1": "   Rd.W[1] = 0x7fffffff;",
        "2": "   OV = 1;",
        "3": " } else {",
        "4": "   Mres[1][47:0] = Rs1.W[1] s* Rs2.W[1].H[0];",
        "5": "   if (\u201c.u\u201d form) {",
        "6": "     Round[1][32:0] = Mres[1][46:14] + 1;",
        "7": "     Rd.W[1] = Round[1][32:1];",
        "8": "   } else {",
        "9": "     Rd.W[1] = Mres[1][46:15];",
        "10": "   }",
        "11": " }",
        "12": " for RV32: x=0",
        "13": " for RV64: x=1..0"
    },
    {
        "0": " if ((Rs1.W[0] == 0x80000000) && (Rs2.W[0].H[1] == 0x8000)) {",
        "1": "   Rd.W[0] = 0x7fffffff;",
        "2": "   OV = 1;",
        "3": " } else {",
        "4": "   Mres[0][47:0] = Rs1.W[0] s* Rs2.W[0].H[1];",
        "5": "   if (\u201c.u\u201d form) {",
        "6": "     Round[0][32:0] = Mres[0][46:14] + 1;",
        "7": "     Rd.W[0] = Round[0][32:1];",
        "8": "   } else {",
        "9": "     Rd.W[0] = Mres[0][46:15];",
        "10": "   }",
        "11": " }",
        "12": " for RV32: x=0",
        "13": " for RV64: x=1..0",
        "14": ""
    },
    {
        "0": " if ((Rs1.W[1] == 0x80000000) && (Rs2.W[1].H[1] == 0x8000)) {",
        "1": "   Rd.W[1] = 0x7fffffff;",
        "2": "   OV = 1;",
        "3": " } else {",
        "4": "   Mres[1][47:0] = Rs1.W[1] s* Rs2.W[1].H[1];",
        "5": "   if (\u201c.u\u201d form) {",
        "6": "     Round[1][32:0] = Mres[1][46:14] + 1;",
        "7": "     Rd.W[1] = Round[1][32:1];",
        "8": "   } else {",
        "9": "     Rd.W[1] = Mres[1][46:15];",
        "10": "   }",
        "11": " }",
        "12": " for RV32: x=0",
        "13": " for RV64: x=1..0",
        "14": ""
    },
    {
        "0": " mula34[0] = signed<34>(Rs1.W[0].H[1] s* Rs2.W[0].H[1])",
        "1": " mulb34[0] = signed<34>(Rs1.W[0].H[0] s* Rs2.W[0].H[0])",
        "2": " mula34[0] = signed<34>(Rs1.W[0].H[1] s* Rs2.W[0].H[0])",
        "3": " mulb34[0] = signed<34>(Rs1.W[0].H[0] s* Rs2.W[0].H[1])",
        "4": " ",
        "5": " res34[0] = signed<34>(Rd.W[0])",
        "6": " if (res34[0] s> (2^31)-1) {",
        "7": "   res34[0] = (2^31)-1;",
        "8": "   OV = 1;",
        "9": " } else if (res34[0] s< -2^31) {",
        "10": "   res34[0] = -2^31;",
        "11": "   OV = 1;",
        "12": " }",
        "13": " Rd.W[0] = res34[0].W[0];",
        "14": " for RV32: x=0",
        "15": " for RV64: x=1..0"
    },
    {
        "0": " mula34[1] = signed<34>(Rs1.W[1].H[1] s* Rs2.W[1].H[1])",
        "1": " mulb34[1] = signed<34>(Rs1.W[1].H[0] s* Rs2.W[1].H[0])",
        "2": " mula34[1] = signed<34>(Rs1.W[1].H[1] s* Rs2.W[1].H[0])",
        "3": " mulb34[1] = signed<34>(Rs1.W[1].H[0] s* Rs2.W[1].H[1])",
        "4": " ",
        "5": " res34[1] = signed<34>(Rd.W[1])",
        "6": " if (res34[1] s> (2^31)-1) {",
        "7": "   res34[1] = (2^31)-1;",
        "8": "   OV = 1;",
        "9": " } else if (res34[1] s< -2^31) {",
        "10": "   res34[1] = -2^31;",
        "11": "   OV = 1;",
        "12": " }",
        "13": " Rd.W[1] = res34[1].W[0];",
        "14": " for RV32: x=0",
        "15": " for RV64: x=1..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[0] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[0] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[1] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[1] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[2] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[2] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[3] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[3] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[4] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[4] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[5] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[5] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[6] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[6] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[7] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[7] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[0] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[0] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0",
        "14": ""
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[1] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[1] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0",
        "14": ""
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[2] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[2] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0",
        "14": ""
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[3] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[3] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0",
        "14": ""
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[4] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[4] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0",
        "14": ""
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[5] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[5] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0",
        "14": ""
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[6] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[6] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0",
        "14": ""
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   res[(7+sa):0] = Rs1.B[7] << sa;",
        "3": "   if (res s> (2^7)-1) {",
        "4": "     res = 0x7f; OV = 1;",
        "5": "   } else if (res s< -2^7) {",
        "6": "     res = 0x80; OV = 1;",
        "7": "   }",
        "8": "   Rd.B[7] = res.B[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=3..0,",
        "13": " for RV64: x=7..0",
        "14": ""
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(15+sa):0] = Rs1.H[0] << sa;",
        "3": "   if (res s> (2^15)-1) {",
        "4": "     res = 0x7fff; OV = 1;",
        "5": "   } else if (res s< -2^15) {",
        "6": "     res = 0x8000; OV = 1;",
        "7": "   }",
        "8": "   Rd.H[0] = res.H[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=1..0,",
        "13": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(15+sa):0] = Rs1.H[1] << sa;",
        "3": "   if (res s> (2^15)-1) {",
        "4": "     res = 0x7fff; OV = 1;",
        "5": "   } else if (res s< -2^15) {",
        "6": "     res = 0x8000; OV = 1;",
        "7": "   }",
        "8": "   Rd.H[1] = res.H[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=1..0,",
        "13": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(15+sa):0] = Rs1.H[2] << sa;",
        "3": "   if (res s> (2^15)-1) {",
        "4": "     res = 0x7fff; OV = 1;",
        "5": "   } else if (res s< -2^15) {",
        "6": "     res = 0x8000; OV = 1;",
        "7": "   }",
        "8": "   Rd.H[2] = res.H[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=1..0,",
        "13": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(15+sa):0] = Rs1.H[3] << sa;",
        "3": "   if (res s> (2^15)-1) {",
        "4": "     res = 0x7fff; OV = 1;",
        "5": "   } else if (res s< -2^15) {",
        "6": "     res = 0x8000; OV = 1;",
        "7": "   }",
        "8": "   Rd.H[3] = res.H[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=1..0,",
        "13": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   res[(15+sa):0] = Rs1.H[0] << sa;",
        "3": "   if (res s> (2^15)-1) {",
        "4": "     res = 0x7fff; OV = 1;",
        "5": "   } else if (res s< -2^15) {",
        "6": "     res = 0x8000; OV = 1;",
        "7": "   }",
        "8": "   Rd.H[0] = res.H[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=1..0,",
        "13": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   res[(15+sa):0] = Rs1.H[1] << sa;",
        "3": "   if (res s> (2^15)-1) {",
        "4": "     res = 0x7fff; OV = 1;",
        "5": "   } else if (res s< -2^15) {",
        "6": "     res = 0x8000; OV = 1;",
        "7": "   }",
        "8": "   Rd.H[1] = res.H[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=1..0,",
        "13": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   res[(15+sa):0] = Rs1.H[2] << sa;",
        "3": "   if (res s> (2^15)-1) {",
        "4": "     res = 0x7fff; OV = 1;",
        "5": "   } else if (res s< -2^15) {",
        "6": "     res = 0x8000; OV = 1;",
        "7": "   }",
        "8": "   Rd.H[2] = res.H[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=1..0,",
        "13": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   res[(15+sa):0] = Rs1.H[3] << sa;",
        "3": "   if (res s> (2^15)-1) {",
        "4": "     res = 0x7fff; OV = 1;",
        "5": "   } else if (res s< -2^15) {",
        "6": "     res = 0x8000; OV = 1;",
        "7": "   }",
        "8": "   Rd.H[3] = res.H[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV32: x=1..0,",
        "13": " for RV64: x=3..0"
    },
    {
        "0": " if (Rs2[3:0] s< 0) {",
        "1": "   sa = -Rs2[3:0];",
        "2": "   sa = (sa == 8)? 7 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[7:-1] = signed<9>(Rs1.B[0][7:sa-1])",
        "5": "     Rd.B[0] = res[7:0];",
        "6": "   } else {",
        "7": "     Rd.B[0] = signed<8>(Rs1.B[0][7:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[2:0];",
        "11": "   res[(7+sa):0] = Rs1.B[0] u<< sa;",
        "12": "   if (res s> (2^7)-1) {",
        "13": "     res[7:0] = 0x7f; OV = 1;",
        "14": "   } else if (res s< -2^7) {",
        "15": "     res[7:0] = 0x80; OV = 1;",
        "16": "   }",
        "17": "   Rd.B[0] = res[7:0];",
        "18": " }",
        "19": " for RV32: x=3..0,",
        "20": " for RV64: x=7..0",
        "21": ""
    },
    {
        "0": " if (Rs2[3:0] s< 0) {",
        "1": "   sa = -Rs2[3:0];",
        "2": "   sa = (sa == 8)? 7 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[7:-1] = signed<9>(Rs1.B[1][7:sa-1])",
        "5": "     Rd.B[1] = res[7:0];",
        "6": "   } else {",
        "7": "     Rd.B[1] = signed<8>(Rs1.B[1][7:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[2:0];",
        "11": "   res[(7+sa):0] = Rs1.B[1] u<< sa;",
        "12": "   if (res s> (2^7)-1) {",
        "13": "     res[7:0] = 0x7f; OV = 1;",
        "14": "   } else if (res s< -2^7) {",
        "15": "     res[7:0] = 0x80; OV = 1;",
        "16": "   }",
        "17": "   Rd.B[1] = res[7:0];",
        "18": " }",
        "19": " for RV32: x=3..0,",
        "20": " for RV64: x=7..0",
        "21": ""
    },
    {
        "0": " if (Rs2[3:0] s< 0) {",
        "1": "   sa = -Rs2[3:0];",
        "2": "   sa = (sa == 8)? 7 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[7:-1] = signed<9>(Rs1.B[2][7:sa-1])",
        "5": "     Rd.B[2] = res[7:0];",
        "6": "   } else {",
        "7": "     Rd.B[2] = signed<8>(Rs1.B[2][7:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[2:0];",
        "11": "   res[(7+sa):0] = Rs1.B[2] u<< sa;",
        "12": "   if (res s> (2^7)-1) {",
        "13": "     res[7:0] = 0x7f; OV = 1;",
        "14": "   } else if (res s< -2^7) {",
        "15": "     res[7:0] = 0x80; OV = 1;",
        "16": "   }",
        "17": "   Rd.B[2] = res[7:0];",
        "18": " }",
        "19": " for RV32: x=3..0,",
        "20": " for RV64: x=7..0",
        "21": ""
    },
    {
        "0": " if (Rs2[3:0] s< 0) {",
        "1": "   sa = -Rs2[3:0];",
        "2": "   sa = (sa == 8)? 7 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[7:-1] = signed<9>(Rs1.B[3][7:sa-1])",
        "5": "     Rd.B[3] = res[7:0];",
        "6": "   } else {",
        "7": "     Rd.B[3] = signed<8>(Rs1.B[3][7:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[2:0];",
        "11": "   res[(7+sa):0] = Rs1.B[3] u<< sa;",
        "12": "   if (res s> (2^7)-1) {",
        "13": "     res[7:0] = 0x7f; OV = 1;",
        "14": "   } else if (res s< -2^7) {",
        "15": "     res[7:0] = 0x80; OV = 1;",
        "16": "   }",
        "17": "   Rd.B[3] = res[7:0];",
        "18": " }",
        "19": " for RV32: x=3..0,",
        "20": " for RV64: x=7..0",
        "21": ""
    },
    {
        "0": " if (Rs2[3:0] s< 0) {",
        "1": "   sa = -Rs2[3:0];",
        "2": "   sa = (sa == 8)? 7 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[7:-1] = signed<9>(Rs1.B[4][7:sa-1])",
        "5": "     Rd.B[4] = res[7:0];",
        "6": "   } else {",
        "7": "     Rd.B[4] = signed<8>(Rs1.B[4][7:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[2:0];",
        "11": "   res[(7+sa):0] = Rs1.B[4] u<< sa;",
        "12": "   if (res s> (2^7)-1) {",
        "13": "     res[7:0] = 0x7f; OV = 1;",
        "14": "   } else if (res s< -2^7) {",
        "15": "     res[7:0] = 0x80; OV = 1;",
        "16": "   }",
        "17": "   Rd.B[4] = res[7:0];",
        "18": " }",
        "19": " for RV32: x=3..0,",
        "20": " for RV64: x=7..0",
        "21": ""
    },
    {
        "0": " if (Rs2[3:0] s< 0) {",
        "1": "   sa = -Rs2[3:0];",
        "2": "   sa = (sa == 8)? 7 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[7:-1] = signed<9>(Rs1.B[5][7:sa-1])",
        "5": "     Rd.B[5] = res[7:0];",
        "6": "   } else {",
        "7": "     Rd.B[5] = signed<8>(Rs1.B[5][7:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[2:0];",
        "11": "   res[(7+sa):0] = Rs1.B[5] u<< sa;",
        "12": "   if (res s> (2^7)-1) {",
        "13": "     res[7:0] = 0x7f; OV = 1;",
        "14": "   } else if (res s< -2^7) {",
        "15": "     res[7:0] = 0x80; OV = 1;",
        "16": "   }",
        "17": "   Rd.B[5] = res[7:0];",
        "18": " }",
        "19": " for RV32: x=3..0,",
        "20": " for RV64: x=7..0",
        "21": ""
    },
    {
        "0": " if (Rs2[3:0] s< 0) {",
        "1": "   sa = -Rs2[3:0];",
        "2": "   sa = (sa == 8)? 7 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[7:-1] = signed<9>(Rs1.B[6][7:sa-1])",
        "5": "     Rd.B[6] = res[7:0];",
        "6": "   } else {",
        "7": "     Rd.B[6] = signed<8>(Rs1.B[6][7:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[2:0];",
        "11": "   res[(7+sa):0] = Rs1.B[6] u<< sa;",
        "12": "   if (res s> (2^7)-1) {",
        "13": "     res[7:0] = 0x7f; OV = 1;",
        "14": "   } else if (res s< -2^7) {",
        "15": "     res[7:0] = 0x80; OV = 1;",
        "16": "   }",
        "17": "   Rd.B[6] = res[7:0];",
        "18": " }",
        "19": " for RV32: x=3..0,",
        "20": " for RV64: x=7..0",
        "21": ""
    },
    {
        "0": " if (Rs2[3:0] s< 0) {",
        "1": "   sa = -Rs2[3:0];",
        "2": "   sa = (sa == 8)? 7 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[7:-1] = signed<9>(Rs1.B[7][7:sa-1])",
        "5": "     Rd.B[7] = res[7:0];",
        "6": "   } else {",
        "7": "     Rd.B[7] = signed<8>(Rs1.B[7][7:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[2:0];",
        "11": "   res[(7+sa):0] = Rs1.B[7] u<< sa;",
        "12": "   if (res s> (2^7)-1) {",
        "13": "     res[7:0] = 0x7f; OV = 1;",
        "14": "   } else if (res s< -2^7) {",
        "15": "     res[7:0] = 0x80; OV = 1;",
        "16": "   }",
        "17": "   Rd.B[7] = res[7:0];",
        "18": " }",
        "19": " for RV32: x=3..0,",
        "20": " for RV64: x=7..0",
        "21": ""
    },
    {
        "0": " if (Rs2[4:0] s< 0) {",
        "1": "   sa = -Rs2[4:0];",
        "2": "   sa = (sa == 16)? 15 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[15:-1] = signed<17>(Rs1.H[0][15:sa-1])",
        "5": "     Rd.H[0] = res[15:0];",
        "6": "   } else {",
        "7": "     Rd.H[0] = signed<16>(Rs1.H[0][15:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[3:0];",
        "11": "   res[(15+sa):0] = Rs1.H[0] u<< sa;",
        "12": "   if (res s> (2^15)-1) {",
        "13": "     res[15:0] = 0x7fff; OV = 1;",
        "14": "   } else if (res s< -2^15) {",
        "15": "     res[15:0] = 0x8000; OV = 1;",
        "16": "   }",
        "17": "   d.H[0] = res[15:0];",
        "18": " }",
        "19": " for RV32: x=1..0,",
        "20": " for RV64: x=3..0"
    },
    {
        "0": " if (Rs2[4:0] s< 0) {",
        "1": "   sa = -Rs2[4:0];",
        "2": "   sa = (sa == 16)? 15 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[15:-1] = signed<17>(Rs1.H[1][15:sa-1])",
        "5": "     Rd.H[1] = res[15:0];",
        "6": "   } else {",
        "7": "     Rd.H[1] = signed<16>(Rs1.H[1][15:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[3:0];",
        "11": "   res[(15+sa):0] = Rs1.H[1] u<< sa;",
        "12": "   if (res s> (2^15)-1) {",
        "13": "     res[15:0] = 0x7fff; OV = 1;",
        "14": "   } else if (res s< -2^15) {",
        "15": "     res[15:0] = 0x8000; OV = 1;",
        "16": "   }",
        "17": "   d.H[1] = res[15:0];",
        "18": " }",
        "19": " for RV32: x=1..0,",
        "20": " for RV64: x=3..0"
    },
    {
        "0": " if (Rs2[4:0] s< 0) {",
        "1": "   sa = -Rs2[4:0];",
        "2": "   sa = (sa == 16)? 15 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[15:-1] = signed<17>(Rs1.H[2][15:sa-1])",
        "5": "     Rd.H[2] = res[15:0];",
        "6": "   } else {",
        "7": "     Rd.H[2] = signed<16>(Rs1.H[2][15:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[3:0];",
        "11": "   res[(15+sa):0] = Rs1.H[2] u<< sa;",
        "12": "   if (res s> (2^15)-1) {",
        "13": "     res[15:0] = 0x7fff; OV = 1;",
        "14": "   } else if (res s< -2^15) {",
        "15": "     res[15:0] = 0x8000; OV = 1;",
        "16": "   }",
        "17": "   d.H[2] = res[15:0];",
        "18": " }",
        "19": " for RV32: x=1..0,",
        "20": " for RV64: x=3..0"
    },
    {
        "0": " if (Rs2[4:0] s< 0) {",
        "1": "   sa = -Rs2[4:0];",
        "2": "   sa = (sa == 16)? 15 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[15:-1] = signed<17>(Rs1.H[3][15:sa-1])",
        "5": "     Rd.H[3] = res[15:0];",
        "6": "   } else {",
        "7": "     Rd.H[3] = signed<16>(Rs1.H[3][15:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[3:0];",
        "11": "   res[(15+sa):0] = Rs1.H[3] u<< sa;",
        "12": "   if (res s> (2^15)-1) {",
        "13": "     res[15:0] = 0x7fff; OV = 1;",
        "14": "   } else if (res s< -2^15) {",
        "15": "     res[15:0] = 0x8000; OV = 1;",
        "16": "   }",
        "17": "   d.H[3] = res[15:0];",
        "18": " }",
        "19": " for RV32: x=1..0,",
        "20": " for RV64: x=3..0"
    },
    {
        "0": " res1[0] = signed<17>(Rs2.W[0].H[1])",
        "1": " res2[0] = signed<17>(Rs2.W[0].H[0])",
        "2": " for (res[0] in [res1[0], res2[0]]) {",
        "3": "   if (res[0] s> (2^15)-1) {",
        "4": "     res[0] = (2^15)-1;",
        "5": "     OV = 1;",
        "6": "   } else if (res[0] s< -2^15) {",
        "7": "     res[0] = -2^15;",
        "8": "     OV = 1;",
        "9": "   }",
        "10": " }",
        "11": " Rd.W[0].H[1] = res1[0].H[0];",
        "12": " Rd.W[0].H[0] = res2[0].H[0];",
        "13": " for RV32, x=0",
        "14": " for RV64, x=1..0"
    },
    {
        "0": " res1[1] = signed<17>(Rs2.W[1].H[1])",
        "1": " res2[1] = signed<17>(Rs2.W[1].H[0])",
        "2": " for (res[1] in [res1[1], res2[1]]) {",
        "3": "   if (res[1] s> (2^15)-1) {",
        "4": "     res[1] = (2^15)-1;",
        "5": "     OV = 1;",
        "6": "   } else if (res[1] s< -2^15) {",
        "7": "     res[1] = -2^15;",
        "8": "     OV = 1;",
        "9": "   }",
        "10": " }",
        "11": " Rd.W[1].H[1] = res1[1].H[0];",
        "12": " Rd.W[1].H[0] = res2[1].H[0];",
        "13": " for RV32, x=0",
        "14": " for RV64, x=1..0"
    },
    {
        "0": " res1[0] = signed<17>(Rs2.W[0].H[1])",
        "1": " res2[0] = signed<17>(Rs2.W[0].H[0])",
        "2": " for (res[0] in [res1[0], res2[0]]) {",
        "3": "   if (res[0] s> (2^15)-1) {",
        "4": "     res[0] = (2^15)-1;",
        "5": "     OV = 1;",
        "6": "   } else if (res[0] s< -2^15) {",
        "7": "     res[0] = -2^15;",
        "8": "     OV = 1;",
        "9": "   }",
        "10": " }",
        "11": " Rd.W[0].H[1] = res1[0].H[0];",
        "12": " Rd.W[0].H[0] = res2[0].H[0];",
        "13": " for RV32, x=0",
        "14": " for RV64, x=1..0"
    },
    {
        "0": " res1[1] = signed<17>(Rs2.W[1].H[1])",
        "1": " res2[1] = signed<17>(Rs2.W[1].H[0])",
        "2": " for (res[1] in [res1[1], res2[1]]) {",
        "3": "   if (res[1] s> (2^15)-1) {",
        "4": "     res[1] = (2^15)-1;",
        "5": "     OV = 1;",
        "6": "   } else if (res[1] s< -2^15) {",
        "7": "     res[1] = -2^15;",
        "8": "     OV = 1;",
        "9": "   }",
        "10": " }",
        "11": " Rd.W[1].H[1] = res1[1].H[0];",
        "12": " Rd.W[1].H[0] = res2[1].H[0];",
        "13": " for RV32, x=0",
        "14": " for RV64, x=1..0"
    },
    {
        "0": " res[0] = signed<9>(Rs2.B[0])",
        "1": " if (res[0] s> (2^7)-1) {",
        "2": "   res[0] = (2^7)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[0] s< -2^7) {",
        "5": "   res[0] = -2^7;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[0] = res[0].B[0];",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " res[1] = signed<9>(Rs2.B[1])",
        "1": " if (res[1] s> (2^7)-1) {",
        "2": "   res[1] = (2^7)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[1] s< -2^7) {",
        "5": "   res[1] = -2^7;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[1] = res[1].B[0];",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " res[2] = signed<9>(Rs2.B[2])",
        "1": " if (res[2] s> (2^7)-1) {",
        "2": "   res[2] = (2^7)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[2] s< -2^7) {",
        "5": "   res[2] = -2^7;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[2] = res[2].B[0];",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " res[3] = signed<9>(Rs2.B[3])",
        "1": " if (res[3] s> (2^7)-1) {",
        "2": "   res[3] = (2^7)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[3] s< -2^7) {",
        "5": "   res[3] = -2^7;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[3] = res[3].B[0];",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " res[4] = signed<9>(Rs2.B[4])",
        "1": " if (res[4] s> (2^7)-1) {",
        "2": "   res[4] = (2^7)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[4] s< -2^7) {",
        "5": "   res[4] = -2^7;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[4] = res[4].B[0];",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " res[5] = signed<9>(Rs2.B[5])",
        "1": " if (res[5] s> (2^7)-1) {",
        "2": "   res[5] = (2^7)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[5] s< -2^7) {",
        "5": "   res[5] = -2^7;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[5] = res[5].B[0];",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " res[6] = signed<9>(Rs2.B[6])",
        "1": " if (res[6] s> (2^7)-1) {",
        "2": "   res[6] = (2^7)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[6] s< -2^7) {",
        "5": "   res[6] = -2^7;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[6] = res[6].B[0];",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " res[7] = signed<9>(Rs2.B[7])",
        "1": " if (res[7] s> (2^7)-1) {",
        "2": "   res[7] = (2^7)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[7] s< -2^7) {",
        "5": "   res[7] = -2^7;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[7] = res[7].B[0];",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " res[0] = signed<17>(Rs2.H[0])",
        "1": " if (res[0] s> (2^15)-1) {",
        "2": "   res[0] = (2^15)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[0] s< -2^15) {",
        "5": "   res[0] = -2^15;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[0] = res[0].H[0];",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " res[1] = signed<17>(Rs2.H[1])",
        "1": " if (res[1] s> (2^15)-1) {",
        "2": "   res[1] = (2^15)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[1] s< -2^15) {",
        "5": "   res[1] = -2^15;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[1] = res[1].H[0];",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " res[2] = signed<17>(Rs2.H[2])",
        "1": " if (res[2] s> (2^15)-1) {",
        "2": "   res[2] = (2^15)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[2] s< -2^15) {",
        "5": "   res[2] = -2^15;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[2] = res[2].H[0];",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " res[3] = signed<17>(Rs2.H[3])",
        "1": " if (res[3] s> (2^15)-1) {",
        "2": "   res[3] = (2^15)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[3] s< -2^15) {",
        "5": "   res[3] = -2^15;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[3] = res[3].H[0];",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " if ((0x80000000 != Rs1.W[0]) || (0x80000000 != Rs2.W[0])) {",
        "1": "   Mres[0][63:0] = Rs1.W[0] s* Rs2.W[0];",
        "2": "   if (\u201c.u\u201d form) {",
        "3": "     Round[0][33:0] = Mres[0][63:30] + 1;",
        "4": "     Rd.W[0] = Round[0][32:1];",
        "5": "   } else {",
        "6": "     Rd.W[0] = Mres[0][62:31];",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd.W[0] = 0x7fffffff;",
        "10": "   OV = 1;",
        "11": " }",
        "12": " for RV32: x=0",
        "13": " for RV64: x=1..0"
    },
    {
        "0": " if ((0x80000000 != Rs1.W[1]) || (0x80000000 != Rs2.W[1])) {",
        "1": "   Mres[1][63:0] = Rs1.W[1] s* Rs2.W[1];",
        "2": "   if (\u201c.u\u201d form) {",
        "3": "     Round[1][33:0] = Mres[1][63:30] + 1;",
        "4": "     Rd.W[1] = Round[1][32:1];",
        "5": "   } else {",
        "6": "     Rd.W[1] = Mres[1][62:31];",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd.W[1] = 0x7fffffff;",
        "10": "   OV = 1;",
        "11": " }",
        "12": " for RV32: x=0",
        "13": " for RV64: x=1..0"
    },
    {
        "0": " absdiff[0] = ABS(ZE9(Rs1.B[0]) \u2013 ZE9(Rs2.B[0]));",
        "1": " Rd = SUM(ZE_XLEN(absdiff[0]));   // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[1] = ABS(ZE9(Rs1.B[1]) \u2013 ZE9(Rs2.B[1]));",
        "1": " Rd = SUM(ZE_XLEN(absdiff[1]));   // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[2] = ABS(ZE9(Rs1.B[2]) \u2013 ZE9(Rs2.B[2]));",
        "1": " Rd = SUM(ZE_XLEN(absdiff[2]));   // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[3] = ABS(ZE9(Rs1.B[3]) \u2013 ZE9(Rs2.B[3]));",
        "1": " Rd = SUM(ZE_XLEN(absdiff[3]));   // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[4] = ABS(ZE9(Rs1.B[4]) \u2013 ZE9(Rs2.B[4]));",
        "1": " Rd = SUM(ZE_XLEN(absdiff[4]));   // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[5] = ABS(ZE9(Rs1.B[5]) \u2013 ZE9(Rs2.B[5]));",
        "1": " Rd = SUM(ZE_XLEN(absdiff[5]));   // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[6] = ABS(ZE9(Rs1.B[6]) \u2013 ZE9(Rs2.B[6]));",
        "1": " Rd = SUM(ZE_XLEN(absdiff[6]));   // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[7] = ABS(ZE9(Rs1.B[7]) \u2013 ZE9(Rs2.B[7]));",
        "1": " Rd = SUM(ZE_XLEN(absdiff[7]));   // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[0] = ABS(ZE9(Rs1.B[0]) \u2013 ZE9(Rs2.B[0]));",
        "1": " Rd = Rd + SUM(ZE_XLEN(absdiff[0]));  // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[1] = ABS(ZE9(Rs1.B[1]) \u2013 ZE9(Rs2.B[1]));",
        "1": " Rd = Rd + SUM(ZE_XLEN(absdiff[1]));  // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[2] = ABS(ZE9(Rs1.B[2]) \u2013 ZE9(Rs2.B[2]));",
        "1": " Rd = Rd + SUM(ZE_XLEN(absdiff[2]));  // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[3] = ABS(ZE9(Rs1.B[3]) \u2013 ZE9(Rs2.B[3]));",
        "1": " Rd = Rd + SUM(ZE_XLEN(absdiff[3]));  // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[4] = ABS(ZE9(Rs1.B[4]) \u2013 ZE9(Rs2.B[4]));",
        "1": " Rd = Rd + SUM(ZE_XLEN(absdiff[4]));  // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[5] = ABS(ZE9(Rs1.B[5]) \u2013 ZE9(Rs2.B[5]));",
        "1": " Rd = Rd + SUM(ZE_XLEN(absdiff[5]));  // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[6] = ABS(ZE9(Rs1.B[6]) \u2013 ZE9(Rs2.B[6]));",
        "1": " Rd = Rd + SUM(ZE_XLEN(absdiff[6]));  // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " absdiff[7] = ABS(ZE9(Rs1.B[7]) \u2013 ZE9(Rs2.B[7]));",
        "1": " Rd = Rd + SUM(ZE_XLEN(absdiff[7]));  // overflow ignored",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "Rd.W[0]": " Rs1.W[0].H[0]:: Rs2.W[0].H[0]",
        "0": " Rs1.W[0].H[0]:: Rs2.W[0].H[0]",
        "1": " Rs1.W[0].H[0]:: Rs2.W[0].H[0]",
        "2": " Rs1.W[0].H[0]:: Rs2.W[0].H[0]",
        "3": " Rs1.W[0].H[0]:: Rs2.W[0].H[0]",
        "4": " //TODO: check for RV32 here, doesn't seem to recognise for RV32",
        "5": " for RV32: x=0,",
        "6": " for RV64: x=1..0"
    },
    {
        "Rd.W[1]": " Rs1.W[1].H[0]:: Rs2.W[1].H[0]",
        "0": " Rs1.W[1].H[0]:: Rs2.W[1].H[0]",
        "1": " Rs1.W[1].H[0]:: Rs2.W[1].H[0]",
        "2": " Rs1.W[1].H[0]:: Rs2.W[1].H[0]",
        "3": " Rs1.W[1].H[0]:: Rs2.W[1].H[0]",
        "4": " //TODO: check for RV32 here, doesn't seem to recognise for RV32",
        "5": " for RV32: x=0,",
        "6": " for RV64: x=1..0"
    },
    {
        "0": " res9[0] = signed<9>(Rs2.B[0])",
        "1": " Rd.B[0] = res9[0].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[1] = signed<9>(Rs2.B[1])",
        "1": " Rd.B[1] = res9[1].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[2] = signed<9>(Rs2.B[2])",
        "1": " Rd.B[2] = res9[2].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[3] = signed<9>(Rs2.B[3])",
        "1": " Rd.B[3] = res9[3].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[4] = signed<9>(Rs2.B[4])",
        "1": " Rd.B[4] = res9[4].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[5] = signed<9>(Rs2.B[5])",
        "1": " Rd.B[5] = res9[5].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[6] = signed<9>(Rs2.B[6])",
        "1": " Rd.B[6] = res9[6].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[7] = signed<9>(Rs2.B[7])",
        "1": " Rd.B[7] = res9[7].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res17[0] = signed<17>(Rs2.H[0])",
        "1": " Rd.H[0] = res17[0].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[1] = signed<17>(Rs2.H[1])",
        "1": " Rd.H[1] = res17[1].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[2] = signed<17>(Rs2.H[2])",
        "1": " Rd.H[2] = res17[2].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[3] = signed<17>(Rs2.H[3])",
        "1": " Rd.H[3] = res17[3].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res_add17[0] = signed<17>(Rs2.W[0].H[0])",
        "1": " res_sub17[0] = signed<17>(Rs2.W[0].H[1])",
        "2": " Rd.W[0].H[1] = res_add17[0].H[0];",
        "3": " Rd.W[0].H[0] = res_sub17[0].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_add17[1] = signed<17>(Rs2.W[1].H[0])",
        "1": " res_sub17[1] = signed<17>(Rs2.W[1].H[1])",
        "2": " Rd.W[1].H[1] = res_add17[1].H[0];",
        "3": " Rd.W[1].H[0] = res_sub17[1].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_sub17[0] = signed<17>(Rs2.W[0].H[0])",
        "1": " res_add17[0] = signed<17>(Rs2.W[0].H[1])",
        "2": " Rd.W[0].H[1] = res_sub17[0].H[0];",
        "3": " Rd.W[0].H[0] = res_add17[0].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_sub17[1] = signed<17>(Rs2.W[1].H[0])",
        "1": " res_add17[1] = signed<17>(Rs2.W[1].H[1])",
        "2": " Rd.W[1].H[1] = res_sub17[1].H[0];",
        "3": " Rd.W[1].H[0] = res_add17[1].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_add17[0] = signed<17>(Rs2.W[0].H[1])",
        "1": " res_sub17[0] = signed<17>(Rs2.W[0].H[0])",
        "2": " Rd.W[0].H[1] = res_add17[0].H[0];",
        "3": " Rd.W[0].H[0] = res_sub17[0].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_add17[1] = signed<17>(Rs2.W[1].H[1])",
        "1": " res_sub17[1] = signed<17>(Rs2.W[1].H[0])",
        "2": " Rd.W[1].H[1] = res_add17[1].H[0];",
        "3": " Rd.W[1].H[0] = res_sub17[1].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_sub17[0] = signed<17>(Rs2.W[0].H[1])",
        "1": " res_add17[0] = signed<17>(Rs2.W[0].H[0])",
        "2": " Rd.W[0].H[1] = res_sub17[0].H[0];",
        "3": " Rd.W[0].H[0] = res_add17[0].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_sub17[1] = signed<17>(Rs2.W[1].H[1])",
        "1": " res_add17[1] = signed<17>(Rs2.W[1].H[0])",
        "2": " Rd.W[1].H[1] = res_sub17[1].H[0];",
        "3": " Rd.W[1].H[0] = res_add17[1].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res9[0] = signed<9>(Rs2.B[0])",
        "1": " Rd.B[0] = res9[0].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[1] = signed<9>(Rs2.B[1])",
        "1": " Rd.B[1] = res9[1].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[2] = signed<9>(Rs2.B[2])",
        "1": " Rd.B[2] = res9[2].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[3] = signed<9>(Rs2.B[3])",
        "1": " Rd.B[3] = res9[3].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[4] = signed<9>(Rs2.B[4])",
        "1": " Rd.B[4] = res9[4].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[5] = signed<9>(Rs2.B[5])",
        "1": " Rd.B[5] = res9[5].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[6] = signed<9>(Rs2.B[6])",
        "1": " Rd.B[6] = res9[6].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[7] = signed<9>(Rs2.B[7])",
        "1": " Rd.B[7] = res9[7].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res17[0] = signed<17>(Rs2.H[0])",
        "1": " Rd.H[0] = res17[0].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[1] = signed<17>(Rs2.H[1])",
        "1": " Rd.H[1] = res17[1].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[2] = signed<17>(Rs2.H[2])",
        "1": " Rd.H[2] = res17[2].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[3] = signed<17>(Rs2.H[3])",
        "1": " Rd.H[3] = res17[3].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.B[0];",
        "1": " if (src s> (2^imm3u)-1) {",
        "2": "   src = (2^imm3u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm3u) {",
        "5": "   src = -2^imm3u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[0] = src",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[1];",
        "1": " if (src s> (2^imm3u)-1) {",
        "2": "   src = (2^imm3u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm3u) {",
        "5": "   src = -2^imm3u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[1] = src",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[2];",
        "1": " if (src s> (2^imm3u)-1) {",
        "2": "   src = (2^imm3u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm3u) {",
        "5": "   src = -2^imm3u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[2] = src",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[3];",
        "1": " if (src s> (2^imm3u)-1) {",
        "2": "   src = (2^imm3u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm3u) {",
        "5": "   src = -2^imm3u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[3] = src",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[4];",
        "1": " if (src s> (2^imm3u)-1) {",
        "2": "   src = (2^imm3u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm3u) {",
        "5": "   src = -2^imm3u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[4] = src",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[5];",
        "1": " if (src s> (2^imm3u)-1) {",
        "2": "   src = (2^imm3u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm3u) {",
        "5": "   src = -2^imm3u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[5] = src",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[6];",
        "1": " if (src s> (2^imm3u)-1) {",
        "2": "   src = (2^imm3u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm3u) {",
        "5": "   src = -2^imm3u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[6] = src",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.B[7];",
        "1": " if (src s> (2^imm3u)-1) {",
        "2": "   src = (2^imm3u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm3u) {",
        "5": "   src = -2^imm3u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.B[7] = src",
        "9": " for RV32: x=3..0,",
        "10": " for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.H[0];",
        "1": " if (src s> (2^imm4u)-1) {",
        "2": "   src = (2^imm4u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm4u) {",
        "5": "   src = -2^imm4u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[0] = src",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.H[1];",
        "1": " if (src s> (2^imm4u)-1) {",
        "2": "   src = (2^imm4u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm4u) {",
        "5": "   src = -2^imm4u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[1] = src",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.H[2];",
        "1": " if (src s> (2^imm4u)-1) {",
        "2": "   src = (2^imm4u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm4u) {",
        "5": "   src = -2^imm4u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[2] = src",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.H[3];",
        "1": " if (src s> (2^imm4u)-1) {",
        "2": "   src = (2^imm4u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm4u) {",
        "5": "   src = -2^imm4u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[3] = src",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.W[0];",
        "1": " if (src s> (2^imm5u)-1) {",
        "2": "   src = (2^imm5u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm5u) {",
        "5": "   src = -2^imm5u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.W[0] = src",
        "9": " for RV32: x=0,",
        "10": " for RV64: x=1..0"
    },
    {
        "0": " src = Rs1.W[1];",
        "1": " if (src s> (2^imm5u)-1) {",
        "2": "   src = (2^imm5u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< -2^imm5u) {",
        "5": "   src = -2^imm5u;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.W[1] = src",
        "9": " for RV32: x=0,",
        "10": " for RV64: x=1..0"
    },
    {
        "0": " Rd.B[0] = (Rs1.B[0] s<= Rs2.B[0])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = (Rs1.B[1] s<= Rs2.B[1])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = (Rs1.B[2] s<= Rs2.B[2])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = (Rs1.B[3] s<= Rs2.B[3])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = (Rs1.B[4] s<= Rs2.B[4])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = (Rs1.B[5] s<= Rs2.B[5])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = (Rs1.B[6] s<= Rs2.B[6])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = (Rs1.B[7] s<= Rs2.B[7])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[0] = (Rs1.B[0] s< Rs2.B[0])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = (Rs1.B[1] s< Rs2.B[1])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = (Rs1.B[2] s< Rs2.B[2])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = (Rs1.B[3] s< Rs2.B[3])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = (Rs1.B[4] s< Rs2.B[4])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = (Rs1.B[5] s< Rs2.B[5])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = (Rs1.B[6] s< Rs2.B[6])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = (Rs1.B[7] s< Rs2.B[7])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.H[0] = (Rs1.H[0] s< Rs2.H[0])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[1] = (Rs1.H[1] s< Rs2.H[1])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[2] = (Rs1.H[2] s< Rs2.H[2])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[3] = (Rs1.H[3] s< Rs2.H[3])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " Rd.B[0] = Rs1.B[0] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " Rd.B[1] = Rs1.B[1] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " Rd.B[2] = Rs1.B[2] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " Rd.B[3] = Rs1.B[3] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " Rd.B[4] = Rs1.B[4] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " Rd.B[5] = Rs1.B[5] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " Rd.B[6] = Rs1.B[6] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " Rd.B[7] = Rs1.B[7] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " Rd.B[0] = Rs1.B[0] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " Rd.B[1] = Rs1.B[1] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " Rd.B[2] = Rs1.B[2] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " Rd.B[3] = Rs1.B[3] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " Rd.B[4] = Rs1.B[4] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " Rd.B[5] = Rs1.B[5] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " Rd.B[6] = Rs1.B[6] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " Rd.B[7] = Rs1.B[7] << sa;",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " Rd.H[0] = Rs1.H[0] << sa;",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " Rd.H[1] = Rs1.H[1] << sa;",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " Rd.H[2] = Rs1.H[2] << sa;",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " Rd.H[3] = Rs1.H[3] << sa;",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " Rd.H[0] = Rs1.H[0] << sa;",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " Rd.H[1] = Rs1.H[1] << sa;",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " Rd.H[2] = Rs1.H[2] << sa;",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " Rd.H[3] = Rs1.H[3] << sa;",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res[0] = Rd.W[0] +",
        "1": "    SE32(Rs1.W[0].B[3] su* Rs2.W[0].B[3]) + SE32(Rs1.W[0].B[2] su* Rs2.W[0].B[2]) += signed<32>(Rs1.W[0].B[2] su* Rs2.W[0].B[2])",
        "2": "    SE32(Rs1.W[0].B[1] su* Rs2.W[0].B[1]) + SE32(Rs1.W[0].B[0] su* Rs2.W[0].B[0]);   // overflow discarded= signed<32>(Rs1.W[0].B[0] su* Rs2.W[0].B[0])",
        "3": " Rd.W[0] = res[0];",
        "4": " for RV32: x=0,",
        "5": " for RV64: x=1..0"
    },
    {
        "0": " res[1] = Rd.W[1] +",
        "1": "    SE32(Rs1.W[1].B[3] su* Rs2.W[1].B[3]) + SE32(Rs1.W[1].B[2] su* Rs2.W[1].B[2]) += signed<32>(Rs1.W[1].B[2] su* Rs2.W[1].B[2])",
        "2": "    SE32(Rs1.W[1].B[1] su* Rs2.W[1].B[1]) + SE32(Rs1.W[1].B[0] su* Rs2.W[1].B[0]);   // overflow discarded= signed<32>(Rs1.W[1].B[0] su* Rs2.W[1].B[0])",
        "3": " Rd.W[1] = res[1];",
        "4": " for RV32: x=0,",
        "5": " for RV64: x=1..0"
    },
    {
        "0": " Rd.B[0] = (Rs1.B[0] s> Rs2.B[0])? Rs1.B[0] : Rs2.B[0];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = (Rs1.B[1] s> Rs2.B[1])? Rs1.B[1] : Rs2.B[1];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = (Rs1.B[2] s> Rs2.B[2])? Rs1.B[2] : Rs2.B[2];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = (Rs1.B[3] s> Rs2.B[3])? Rs1.B[3] : Rs2.B[3];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = (Rs1.B[4] s> Rs2.B[4])? Rs1.B[4] : Rs2.B[4];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = (Rs1.B[5] s> Rs2.B[5])? Rs1.B[5] : Rs2.B[5];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = (Rs1.B[6] s> Rs2.B[6])? Rs1.B[6] : Rs2.B[6];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = (Rs1.B[7] s> Rs2.B[7])? Rs1.B[7] : Rs2.B[7];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.H[0] = (Rs1.H[0] s> Rs2.H[0])? Rs1.H[0] : Rs2.H[0];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[1] = (Rs1.H[1] s> Rs2.H[1])? Rs1.H[1] : Rs2.H[1];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[2] = (Rs1.H[2] s> Rs2.H[2])? Rs1.H[2] : Rs2.H[2];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[3] = (Rs1.H[3] s> Rs2.H[3])? Rs1.H[3] : Rs2.H[3];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.W[0] = Rs1.W[0].H[0] s* Rs2.W[0].H[0]; // SMBB16",
        "1": " Rd.W[0] = Rs1.W[0].H[0] s* Rs2.W[0].H[1]; // SMBT16",
        "2": " Rd.W[0] = Rs1.W[0].H[1] s* Rs2.W[0].H[1]; // SMTT16",
        "3": " for RV32: x=0,",
        "4": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[1] = Rs1.W[1].H[0] s* Rs2.W[1].H[0]; // SMBB16",
        "1": " Rd.W[1] = Rs1.W[1].H[0] s* Rs2.W[1].H[1]; // SMBT16",
        "2": " Rd.W[1] = Rs1.W[1].H[1] s* Rs2.W[1].H[1]; // SMTT16",
        "3": " for RV32: x=0,",
        "4": " for RV64: x=1..0"
    },
    {
        "0": " Rd.B[0] = (Rs1.B[0] s< Rs2.B[0])? Rs1.B[0] : Rs2.B[0];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = (Rs1.B[1] s< Rs2.B[1])? Rs1.B[1] : Rs2.B[1];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = (Rs1.B[2] s< Rs2.B[2])? Rs1.B[2] : Rs2.B[2];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = (Rs1.B[3] s< Rs2.B[3])? Rs1.B[3] : Rs2.B[3];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = (Rs1.B[4] s< Rs2.B[4])? Rs1.B[4] : Rs2.B[4];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = (Rs1.B[5] s< Rs2.B[5])? Rs1.B[5] : Rs2.B[5];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = (Rs1.B[6] s< Rs2.B[6])? Rs1.B[6] : Rs2.B[6];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = (Rs1.B[7] s< Rs2.B[7])? Rs1.B[7] : Rs2.B[7];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.H[0] = (Rs1.H[0] s< Rs2.H[0])? Rs1.H[0] : Rs2.H[0];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[1] = (Rs1.H[1] s< Rs2.H[1])? Rs1.H[1] : Rs2.H[1];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[2] = (Rs1.H[2] s< Rs2.H[2])? Rs1.H[2] : Rs2.H[2];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[3] = (Rs1.H[3] s< Rs2.H[3])? Rs1.H[3] : Rs2.H[3];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Mres[0][63:0] = Rs1.W[0] s* Rs2.W[0];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[0][32:0] = Mres[0][63:31] + 1;",
        "3": "   Rd.W[0] = Round[0][32:1];",
        "4": " } else {",
        "5": "   Rd.W[0] = Mres[0][63:32];",
        "6": " }",
        "7": " for RV32: x=0",
        "8": " for RV64: x=1..0"
    },
    {
        "0": " Mres[1][63:0] = Rs1.W[1] s* Rs2.W[1];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[1][32:0] = Mres[1][63:31] + 1;",
        "3": "   Rd.W[1] = Round[1][32:1];",
        "4": " } else {",
        "5": "   Rd.W[1] = Mres[1][63:32];",
        "6": " }",
        "7": " for RV32: x=0",
        "8": " for RV64: x=1..0"
    },
    {
        "0": " Mres[0][47:0] = Rs1.W[0] s* Rs2.W[0].H[0];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[0][32:0] = Mres[0][47:15] + 1;",
        "3": "   Rd.W[0] = Round[0][32:1];",
        "4": " } else {",
        "5": "   Rd.W[0] = Mres[0][47:16];",
        "6": " }",
        "7": " for RV32: x=0",
        "8": " for RV64: x=1..0"
    },
    {
        "0": " Mres[1][47:0] = Rs1.W[1] s* Rs2.W[1].H[0];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[1][32:0] = Mres[1][47:15] + 1;",
        "3": "   Rd.W[1] = Round[1][32:1];",
        "4": " } else {",
        "5": "   Rd.W[1] = Mres[1][47:16];",
        "6": " }",
        "7": " for RV32: x=0",
        "8": " for RV64: x=1..0"
    },
    {
        "0": " Mres[0][47:0] = Rs1.W[0] s* Rs2.W[0].H[1];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[0][32:0] = Mres[0][47:15] + 1;",
        "3": "   Rd.W[0] = Round[0][32:1];",
        "4": " } else {",
        "5": "   Rd.W[0] = Mres[0][47:16];",
        "6": " }",
        "7": " for RV32: x=0",
        "8": " for RV64: x=1..0"
    },
    {
        "0": " Mres[1][47:0] = Rs1.W[1] s* Rs2.W[1].H[1];",
        "1": " if (\u201c.u\u201d form) {",
        "2": "   Round[1][32:0] = Mres[1][47:15] + 1;",
        "3": "   Rd.W[1] = Round[1][32:1];",
        "4": " } else {",
        "5": "   Rd.W[1] = Mres[1][47:16];",
        "6": " }",
        "7": " for RV32: x=0",
        "8": " for RV64: x=1..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[0][7:sa-1])",
        "4": "     Rd.B[0] = res[7:0];",
        "5": "   } else { // SRA8",
        "6": "     Rd.B[0] = signed<8>(Rd.B[0][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[1][7:sa-1])",
        "4": "     Rd.B[1] = res[7:0];",
        "5": "   } else { // SRA8",
        "6": "     Rd.B[1] = signed<8>(Rd.B[1][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[2][7:sa-1])",
        "4": "     Rd.B[2] = res[7:0];",
        "5": "   } else { // SRA8",
        "6": "     Rd.B[2] = signed<8>(Rd.B[2][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[3][7:sa-1])",
        "4": "     Rd.B[3] = res[7:0];",
        "5": "   } else { // SRA8",
        "6": "     Rd.B[3] = signed<8>(Rd.B[3][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[4][7:sa-1])",
        "4": "     Rd.B[4] = res[7:0];",
        "5": "   } else { // SRA8",
        "6": "     Rd.B[4] = signed<8>(Rd.B[4][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[5][7:sa-1])",
        "4": "     Rd.B[5] = res[7:0];",
        "5": "   } else { // SRA8",
        "6": "     Rd.B[5] = signed<8>(Rd.B[5][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[6][7:sa-1])",
        "4": "     Rd.B[6] = res[7:0];",
        "5": "   } else { // SRA8",
        "6": "     Rd.B[6] = signed<8>(Rd.B[6][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[7][7:sa-1])",
        "4": "     Rd.B[7] = res[7:0];",
        "5": "   } else { // SRA8",
        "6": "     Rd.B[7] = signed<8>(Rd.B[7][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRAI8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[0][7:sa-1])",
        "4": "     Rd.B[0] = res[7:0];",
        "5": "   } else { // SRAI8",
        "6": "     Rd.B[0] = signed<8>(Rd.B[0][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRAI8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[1][7:sa-1])",
        "4": "     Rd.B[1] = res[7:0];",
        "5": "   } else { // SRAI8",
        "6": "     Rd.B[1] = signed<8>(Rd.B[1][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRAI8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[2][7:sa-1])",
        "4": "     Rd.B[2] = res[7:0];",
        "5": "   } else { // SRAI8",
        "6": "     Rd.B[2] = signed<8>(Rd.B[2][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRAI8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[3][7:sa-1])",
        "4": "     Rd.B[3] = res[7:0];",
        "5": "   } else { // SRAI8",
        "6": "     Rd.B[3] = signed<8>(Rd.B[3][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRAI8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[4][7:sa-1])",
        "4": "     Rd.B[4] = res[7:0];",
        "5": "   } else { // SRAI8",
        "6": "     Rd.B[4] = signed<8>(Rd.B[4][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRAI8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[5][7:sa-1])",
        "4": "     Rd.B[5] = res[7:0];",
        "5": "   } else { // SRAI8",
        "6": "     Rd.B[5] = signed<8>(Rd.B[5][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRAI8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[6][7:sa-1])",
        "4": "     Rd.B[6] = res[7:0];",
        "5": "   } else { // SRAI8",
        "6": "     Rd.B[6] = signed<8>(Rd.B[6][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRAI8.u",
        "3": "     res[7:-1] = signed<9>(Rs1.B[7][7:sa-1])",
        "4": "     Rd.B[7] = res[7:0];",
        "5": "   } else { // SRAI8",
        "6": "     Rd.B[7] = signed<8>(Rd.B[7][7:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA16.u",
        "3": "     res[15:-1] = signed<17>(Rs1.H[0][15:sa-1])",
        "4": "     Rd.H[0] = res[15:0];",
        "5": "   } else { // SRA16",
        "6": "     Rd.H[0] = signed<16>(Rs1.H[0][15:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA16.u",
        "3": "     res[15:-1] = signed<17>(Rs1.H[1][15:sa-1])",
        "4": "     Rd.H[1] = res[15:0];",
        "5": "   } else { // SRA16",
        "6": "     Rd.H[1] = signed<16>(Rs1.H[1][15:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA16.u",
        "3": "     res[15:-1] = signed<17>(Rs1.H[2][15:sa-1])",
        "4": "     Rd.H[2] = res[15:0];",
        "5": "   } else { // SRA16",
        "6": "     Rd.H[2] = signed<16>(Rs1.H[2][15:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA16.u",
        "3": "     res[15:-1] = signed<17>(Rs1.H[3][15:sa-1])",
        "4": "     Rd.H[3] = res[15:0];",
        "5": "   } else { // SRA16",
        "6": "     Rd.H[3] = signed<16>(Rs1.H[3][15:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRAI16.u",
        "3": "     res[15:-1] = signed<17>(Rs1.H[0][15:sa-1])",
        "4": "     Rd.H[0] = res[15:0];",
        "5": "   } else { // SRAI16",
        "6": "     Rd.H[0] = signed<16>(Rs1.H[0][15:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRAI16.u",
        "3": "     res[15:-1] = signed<17>(Rs1.H[1][15:sa-1])",
        "4": "     Rd.H[1] = res[15:0];",
        "5": "   } else { // SRAI16",
        "6": "     Rd.H[1] = signed<16>(Rs1.H[1][15:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRAI16.u",
        "3": "     res[15:-1] = signed<17>(Rs1.H[2][15:sa-1])",
        "4": "     Rd.H[2] = res[15:0];",
        "5": "   } else { // SRAI16",
        "6": "     Rd.H[2] = signed<16>(Rs1.H[2][15:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRAI16.u",
        "3": "     res[15:-1] = signed<17>(Rs1.H[3][15:sa-1])",
        "4": "     Rd.H[3] = res[15:0];",
        "5": "   } else { // SRAI16",
        "6": "     Rd.H[3] = signed<16>(Rs1.H[3][15:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRL8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[0][7:sa-1]) + 1;",
        "4": "     Rd.B[0] = res[8:1];",
        "5": "   } else { // SRL8",
        "6": "     Rd.B[0] = ZE8(Rs1.B[0][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRL8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[1][7:sa-1]) + 1;",
        "4": "     Rd.B[1] = res[8:1];",
        "5": "   } else { // SRL8",
        "6": "     Rd.B[1] = ZE8(Rs1.B[1][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRL8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[2][7:sa-1]) + 1;",
        "4": "     Rd.B[2] = res[8:1];",
        "5": "   } else { // SRL8",
        "6": "     Rd.B[2] = ZE8(Rs1.B[2][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRL8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[3][7:sa-1]) + 1;",
        "4": "     Rd.B[3] = res[8:1];",
        "5": "   } else { // SRL8",
        "6": "     Rd.B[3] = ZE8(Rs1.B[3][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRL8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[4][7:sa-1]) + 1;",
        "4": "     Rd.B[4] = res[8:1];",
        "5": "   } else { // SRL8",
        "6": "     Rd.B[4] = ZE8(Rs1.B[4][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRL8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[5][7:sa-1]) + 1;",
        "4": "     Rd.B[5] = res[8:1];",
        "5": "   } else { // SRL8",
        "6": "     Rd.B[5] = ZE8(Rs1.B[5][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRL8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[6][7:sa-1]) + 1;",
        "4": "     Rd.B[6] = res[8:1];",
        "5": "   } else { // SRL8",
        "6": "     Rd.B[6] = ZE8(Rs1.B[6][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[2:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRL8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[7][7:sa-1]) + 1;",
        "4": "     Rd.B[7] = res[8:1];",
        "5": "   } else { // SRL8",
        "6": "     Rd.B[7] = ZE8(Rs1.B[7][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[0][7:sa-1]) + 1;",
        "4": "     Rd.B[0] = res[8:1];",
        "5": "   } else { // SRLI8",
        "6": "     Rd.B[0] = ZE8(Rs1.B[0][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[1][7:sa-1]) + 1;",
        "4": "     Rd.B[1] = res[8:1];",
        "5": "   } else { // SRLI8",
        "6": "     Rd.B[1] = ZE8(Rs1.B[1][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[2][7:sa-1]) + 1;",
        "4": "     Rd.B[2] = res[8:1];",
        "5": "   } else { // SRLI8",
        "6": "     Rd.B[2] = ZE8(Rs1.B[2][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[3][7:sa-1]) + 1;",
        "4": "     Rd.B[3] = res[8:1];",
        "5": "   } else { // SRLI8",
        "6": "     Rd.B[3] = ZE8(Rs1.B[3][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[4][7:sa-1]) + 1;",
        "4": "     Rd.B[4] = res[8:1];",
        "5": "   } else { // SRLI8",
        "6": "     Rd.B[4] = ZE8(Rs1.B[4][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[5][7:sa-1]) + 1;",
        "4": "     Rd.B[5] = res[8:1];",
        "5": "   } else { // SRLI8",
        "6": "     Rd.B[5] = ZE8(Rs1.B[5][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[6][7:sa-1]) + 1;",
        "4": "     Rd.B[6] = res[8:1];",
        "5": "   } else { // SRLI8",
        "6": "     Rd.B[6] = ZE8(Rs1.B[6][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = imm3u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI8.u",
        "3": "     res[8:0] = ZE9(Rs1.B[7][7:sa-1]) + 1;",
        "4": "     Rd.B[7] = res[8:1];",
        "5": "   } else { // SRLI8",
        "6": "     Rd.B[7] = ZE8(Rs1.B[7][7:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=3..0,",
        "12": " for RV64: x=7..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRL16.u",
        "3": "     res[16:0] = ZE17(Rs1.H[0][15:sa-1]) + 1;",
        "4": "     Rd.H[0] = res[16:1];",
        "5": "   } else { // SRL16",
        "6": "     Rd.H[0] = ZE16(Rs1.H[0][15:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRL16.u",
        "3": "     res[16:0] = ZE17(Rs1.H[1][15:sa-1]) + 1;",
        "4": "     Rd.H[1] = res[16:1];",
        "5": "   } else { // SRL16",
        "6": "     Rd.H[1] = ZE16(Rs1.H[1][15:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRL16.u",
        "3": "     res[16:0] = ZE17(Rs1.H[2][15:sa-1]) + 1;",
        "4": "     Rd.H[2] = res[16:1];",
        "5": "   } else { // SRL16",
        "6": "     Rd.H[2] = ZE16(Rs1.H[2][15:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = Rs2[3:0];",
        "1": " if (sa != 0) {",
        "2": "   if ('.u' form) { // SRL16.u",
        "3": "     res[16:0] = ZE17(Rs1.H[3][15:sa-1]) + 1;",
        "4": "     Rd.H[3] = res[16:1];",
        "5": "   } else { // SRL16",
        "6": "     Rd.H[3] = ZE16(Rs1.H[3][15:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI16.u",
        "3": "     res[16:0] = ZE17(Rs1.H[0][15:sa-1]) + 1;",
        "4": "     Rd.H[0] = res[16:1];",
        "5": "   } else { // SRLI16",
        "6": "     Rd.H[0] = ZE16(Rs1.H[0][15:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI16.u",
        "3": "     res[16:0] = ZE17(Rs1.H[1][15:sa-1]) + 1;",
        "4": "     Rd.H[1] = res[16:1];",
        "5": "   } else { // SRLI16",
        "6": "     Rd.H[1] = ZE16(Rs1.H[1][15:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI16.u",
        "3": "     res[16:0] = ZE17(Rs1.H[2][15:sa-1]) + 1;",
        "4": "     Rd.H[2] = res[16:1];",
        "5": "   } else { // SRLI16",
        "6": "     Rd.H[2] = ZE16(Rs1.H[2][15:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " sa = imm4u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI16.u",
        "3": "     res[16:0] = ZE17(Rs1.H[3][15:sa-1]) + 1;",
        "4": "     Rd.H[3] = res[16:1];",
        "5": "   } else { // SRLI16",
        "6": "     Rd.H[3] = ZE16(Rs1.H[3][15:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV32: x=1..0,",
        "12": " for RV64: x=3..0"
    },
    {
        "0": " Rd.W[0].H[1] = Rs1.W[0].H[1] + Rs2.W[0].H[1]; // overflow discarded",
        "1": " Rd.W[0].H[0] = Rs1.W[0].H[0] \u2013 Rs2.W[0].H[0]; // overflow discarded",
        "2": " for RV32, x=0",
        "3": " for RV64, x=1..0"
    },
    {
        "0": " Rd.W[1].H[1] = Rs1.W[1].H[1] + Rs2.W[1].H[1]; // overflow discarded",
        "1": " Rd.W[1].H[0] = Rs1.W[1].H[0] \u2013 Rs2.W[1].H[0]; // overflow discarded",
        "2": " for RV32, x=0",
        "3": " for RV64, x=1..0"
    },
    {
        "0": " Rd.W[0].H[1] = Rs1.W[0].H[1] - Rs2.W[0].H[1];",
        "1": " Rd.W[0].H[0] = Rs1.W[0].H[0] + Rs2.W[0].H[0];",
        "2": " for RV32, x=0",
        "3": " for RV64, x=1..0"
    },
    {
        "0": " Rd.W[1].H[1] = Rs1.W[1].H[1] - Rs2.W[1].H[1];",
        "1": " Rd.W[1].H[0] = Rs1.W[1].H[0] + Rs2.W[1].H[0];",
        "2": " for RV32, x=0",
        "3": " for RV64, x=1..0"
    },
    {
        "0": " Rd.B[0] = Rs1.B[0] - Rs2.B[0];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = Rs1.B[1] - Rs2.B[1];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = Rs1.B[2] - Rs2.B[2];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = Rs1.B[3] - Rs2.B[3];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = Rs1.B[4] - Rs2.B[4];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = Rs1.B[5] - Rs2.B[5];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = Rs1.B[6] - Rs2.B[6];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = Rs1.B[7] - Rs2.B[7];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.H[0] = Rs1.H[0] - Rs2.H[0];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[1] = Rs1.H[1] - Rs2.H[1];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[2] = Rs1.H[2] - Rs2.H[2];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[3] = Rs1.H[3] - Rs2.H[3];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "Rd.H[0]": " Rs1.H[0].B[0]::Rs1.H[0].B[1]",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "Rd.H[1]": " Rs1.H[1].B[0]::Rs1.H[1].B[1]",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "Rd.H[2]": " Rs1.H[2].B[0]::Rs1.H[2].B[1]",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "Rd.H[3]": " Rs1.H[3].B[0]::Rs1.H[3].B[1]",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "Rd.W[0]": " Rs1.W[0].H[0]::Rs1.W[0].H[1]",
        "1": " for RV32: x=0,",
        "2": " for RV64: x=1..0"
    },
    {
        "Rd.W[1]": " Rs1.W[1].H[0]::Rs1.W[1].H[1]",
        "1": " for RV32: x=0,",
        "2": " for RV64: x=1..0"
    },
    {
        "0": "  src = Rs1.H[0];",
        "1": "  if (src s> (2^imm3u)-1) {",
        "2": "    src = (2^imm3u)-1;",
        "3": "    OV = 1;",
        "4": "  } else if (src s< 0) {",
        "5": "    src = 0;",
        "6": "    OV = 1;",
        "7": "  }",
        "8": "  Rd.H[0] = src;",
        "9": "  for RV32: x=3..0,",
        "10": "  for RV64: x=7..0"
    },
    {
        "0": "  src = Rs1.H[1];",
        "1": "  if (src s> (2^imm3u)-1) {",
        "2": "    src = (2^imm3u)-1;",
        "3": "    OV = 1;",
        "4": "  } else if (src s< 0) {",
        "5": "    src = 0;",
        "6": "    OV = 1;",
        "7": "  }",
        "8": "  Rd.H[1] = src;",
        "9": "  for RV32: x=3..0,",
        "10": "  for RV64: x=7..0"
    },
    {
        "0": "  src = Rs1.H[2];",
        "1": "  if (src s> (2^imm3u)-1) {",
        "2": "    src = (2^imm3u)-1;",
        "3": "    OV = 1;",
        "4": "  } else if (src s< 0) {",
        "5": "    src = 0;",
        "6": "    OV = 1;",
        "7": "  }",
        "8": "  Rd.H[2] = src;",
        "9": "  for RV32: x=3..0,",
        "10": "  for RV64: x=7..0"
    },
    {
        "0": "  src = Rs1.H[3];",
        "1": "  if (src s> (2^imm3u)-1) {",
        "2": "    src = (2^imm3u)-1;",
        "3": "    OV = 1;",
        "4": "  } else if (src s< 0) {",
        "5": "    src = 0;",
        "6": "    OV = 1;",
        "7": "  }",
        "8": "  Rd.H[3] = src;",
        "9": "  for RV32: x=3..0,",
        "10": "  for RV64: x=7..0"
    },
    {
        "0": "  src = Rs1.H[4];",
        "1": "  if (src s> (2^imm3u)-1) {",
        "2": "    src = (2^imm3u)-1;",
        "3": "    OV = 1;",
        "4": "  } else if (src s< 0) {",
        "5": "    src = 0;",
        "6": "    OV = 1;",
        "7": "  }",
        "8": "  Rd.H[4] = src;",
        "9": "  for RV32: x=3..0,",
        "10": "  for RV64: x=7..0"
    },
    {
        "0": "  src = Rs1.H[5];",
        "1": "  if (src s> (2^imm3u)-1) {",
        "2": "    src = (2^imm3u)-1;",
        "3": "    OV = 1;",
        "4": "  } else if (src s< 0) {",
        "5": "    src = 0;",
        "6": "    OV = 1;",
        "7": "  }",
        "8": "  Rd.H[5] = src;",
        "9": "  for RV32: x=3..0,",
        "10": "  for RV64: x=7..0"
    },
    {
        "0": "  src = Rs1.H[6];",
        "1": "  if (src s> (2^imm3u)-1) {",
        "2": "    src = (2^imm3u)-1;",
        "3": "    OV = 1;",
        "4": "  } else if (src s< 0) {",
        "5": "    src = 0;",
        "6": "    OV = 1;",
        "7": "  }",
        "8": "  Rd.H[6] = src;",
        "9": "  for RV32: x=3..0,",
        "10": "  for RV64: x=7..0"
    },
    {
        "0": "  src = Rs1.H[7];",
        "1": "  if (src s> (2^imm3u)-1) {",
        "2": "    src = (2^imm3u)-1;",
        "3": "    OV = 1;",
        "4": "  } else if (src s< 0) {",
        "5": "    src = 0;",
        "6": "    OV = 1;",
        "7": "  }",
        "8": "  Rd.H[7] = src;",
        "9": "  for RV32: x=3..0,",
        "10": "  for RV64: x=7..0"
    },
    {
        "0": " src = Rs1.H[0];",
        "1": " if (src s> (2^imm4u)-1) {",
        "2": "   src = (2^imm4u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< 0) {",
        "5": "   src = 0;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[0] = src;",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.H[1];",
        "1": " if (src s> (2^imm4u)-1) {",
        "2": "   src = (2^imm4u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< 0) {",
        "5": "   src = 0;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[1] = src;",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.H[2];",
        "1": " if (src s> (2^imm4u)-1) {",
        "2": "   src = (2^imm4u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< 0) {",
        "5": "   src = 0;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[2] = src;",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.H[3];",
        "1": " if (src s> (2^imm4u)-1) {",
        "2": "   src = (2^imm4u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< 0) {",
        "5": "   src = 0;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.H[3] = src;",
        "9": " for RV32: x=1..0,",
        "10": " for RV64: x=3..0"
    },
    {
        "0": " src = Rs1.W[0];",
        "1": " if (src s> (2^imm5u)-1) {",
        "2": "   src = (2^imm5u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< 0) {",
        "5": "   src = 0;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.W[0] = src",
        "9": " for RV32: x=0,",
        "10": " for RV64: x=1..0"
    },
    {
        "0": " src = Rs1.W[1];",
        "1": " if (src s> (2^imm5u)-1) {",
        "2": "   src = (2^imm5u)-1;",
        "3": "   OV = 1;",
        "4": " } else if (src s< 0) {",
        "5": "   src = 0;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.W[1] = src",
        "9": " for RV32: x=0,",
        "10": " for RV64: x=1..0"
    },
    {
        "0": " Rd.B[0] = (Rs1.B[0] u<= Rs2.B[0])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = (Rs1.B[1] u<= Rs2.B[1])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = (Rs1.B[2] u<= Rs2.B[2])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = (Rs1.B[3] u<= Rs2.B[3])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = (Rs1.B[4] u<= Rs2.B[4])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = (Rs1.B[5] u<= Rs2.B[5])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = (Rs1.B[6] u<= Rs2.B[6])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = (Rs1.B[7] u<= Rs2.B[7])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.H[0] = (Rs1.H[0] u<= Rs2.H[0])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[1] = (Rs1.H[1] u<= Rs2.H[1])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[2] = (Rs1.H[2] u<= Rs2.H[2])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[3] = (Rs1.H[3] u<= Rs2.H[3])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.B[0] = (Rs1.B[0] u< Rs2.B[0])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = (Rs1.B[1] u< Rs2.B[1])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = (Rs1.B[2] u< Rs2.B[2])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = (Rs1.B[3] u< Rs2.B[3])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = (Rs1.B[4] u< Rs2.B[4])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = (Rs1.B[5] u< Rs2.B[5])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = (Rs1.B[6] u< Rs2.B[6])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = (Rs1.B[7] u< Rs2.B[7])? 0xff : 0x0;",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.H[0] = (Rs1.H[0] u< Rs2.H[0])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[1] = (Rs1.H[1] u< Rs2.H[1])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[2] = (Rs1.H[2] u< Rs2.H[2])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[3] = (Rs1.H[3] u< Rs2.H[3])? 0xffff : 0x0;",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " res[0] = ZE9(Rs1.B[0]) + ZE9(Rs2.B[0]);",
        "1": " if (res[0] u> (2^8)-1) {",
        "2": "   res[0] = (2^8)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[0] = res[0].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[1] = ZE9(Rs1.B[1]) + ZE9(Rs2.B[1]);",
        "1": " if (res[1] u> (2^8)-1) {",
        "2": "   res[1] = (2^8)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[1] = res[1].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[2] = ZE9(Rs1.B[2]) + ZE9(Rs2.B[2]);",
        "1": " if (res[2] u> (2^8)-1) {",
        "2": "   res[2] = (2^8)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[2] = res[2].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[3] = ZE9(Rs1.B[3]) + ZE9(Rs2.B[3]);",
        "1": " if (res[3] u> (2^8)-1) {",
        "2": "   res[3] = (2^8)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[3] = res[3].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[4] = ZE9(Rs1.B[4]) + ZE9(Rs2.B[4]);",
        "1": " if (res[4] u> (2^8)-1) {",
        "2": "   res[4] = (2^8)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[4] = res[4].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[5] = ZE9(Rs1.B[5]) + ZE9(Rs2.B[5]);",
        "1": " if (res[5] u> (2^8)-1) {",
        "2": "   res[5] = (2^8)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[5] = res[5].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[6] = ZE9(Rs1.B[6]) + ZE9(Rs2.B[6]);",
        "1": " if (res[6] u> (2^8)-1) {",
        "2": "   res[6] = (2^8)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[6] = res[6].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[7] = ZE9(Rs1.B[7]) + ZE9(Rs2.B[7]);",
        "1": " if (res[7] u> (2^8)-1) {",
        "2": "   res[7] = (2^8)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[7] = res[7].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[0] = ZE17(Rs1.H[0]) + ZE17(Rs2.H[0]);",
        "1": " if (res[0] u> (2^16)-1) {",
        "2": "   res[0] = (2^16)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.H[0] = res[0].H[0];",
        "6": " for RV32: x=1..0,",
        "7": " for RV64: x=3..0"
    },
    {
        "0": " res[1] = ZE17(Rs1.H[1]) + ZE17(Rs2.H[1]);",
        "1": " if (res[1] u> (2^16)-1) {",
        "2": "   res[1] = (2^16)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.H[1] = res[1].H[0];",
        "6": " for RV32: x=1..0,",
        "7": " for RV64: x=3..0"
    },
    {
        "0": " res[2] = ZE17(Rs1.H[2]) + ZE17(Rs2.H[2]);",
        "1": " if (res[2] u> (2^16)-1) {",
        "2": "   res[2] = (2^16)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.H[2] = res[2].H[0];",
        "6": " for RV32: x=1..0,",
        "7": " for RV64: x=3..0"
    },
    {
        "0": " res[3] = ZE17(Rs1.H[3]) + ZE17(Rs2.H[3]);",
        "1": " if (res[3] u> (2^16)-1) {",
        "2": "   res[3] = (2^16)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.H[3] = res[3].H[0];",
        "6": " for RV32: x=1..0,",
        "7": " for RV64: x=3..0"
    },
    {
        "0": " res1[0] = ZE17(Rs1.W[0].H[1]) + ZE17(Rs2.W[0].H[0]);",
        "1": " res2[0] = ZE17(Rs1.W[0].H[0]) \u2013 ZE17(Rs2.W[0].H[1]);",
        "2": " if (res1[0] u> (2^16)-1) {",
        "3": "   res1[0] = (2^16)-1;",
        "4": "   OV = 1;",
        "5": " }",
        "6": " if (res2[0] s< 0) {",
        "7": "   res2[0] = 0;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.W[0].H[1] = res1[0].H[0];",
        "11": " Rd.W[0].H[0] = res2[0].H[0];",
        "12": " for RV32, x=0",
        "13": " for RV64, x=1..0"
    },
    {
        "0": " res1[1] = ZE17(Rs1.W[1].H[1]) + ZE17(Rs2.W[1].H[0]);",
        "1": " res2[1] = ZE17(Rs1.W[1].H[0]) \u2013 ZE17(Rs2.W[1].H[1]);",
        "2": " if (res1[1] u> (2^16)-1) {",
        "3": "   res1[1] = (2^16)-1;",
        "4": "   OV = 1;",
        "5": " }",
        "6": " if (res2[1] s< 0) {",
        "7": "   res2[1] = 0;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.W[1].H[1] = res1[1].H[0];",
        "11": " Rd.W[1].H[0] = res2[1].H[0];",
        "12": " for RV32, x=0",
        "13": " for RV64, x=1..0"
    },
    {
        "0": " res1[0] = ZE17(Rs1.W[0].H[1]) - ZE17(Rs2.W[0].H[0]);",
        "1": " res2[0] = ZE17(Rs1.W[0].H[0]) + ZE17(Rs2.W[0].H[1]);",
        "2": " if (res1[0] s< 0) {",
        "3": "   res1[0] = 0;",
        "4": "   OV = 1;",
        "5": " } else if (res2[0] u> (2^16)-1) {",
        "6": "   res2[0] = (2^16)-1;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[0].H[1] = res1[0].H[0];",
        "10": " Rd.W[0].H[0] = res2[0].H[0];",
        "11": " for RV32, x=0",
        "12": " for RV64, x=1..0"
    },
    {
        "0": " res1[1] = ZE17(Rs1.W[1].H[1]) - ZE17(Rs2.W[1].H[0]);",
        "1": " res2[1] = ZE17(Rs1.W[1].H[0]) + ZE17(Rs2.W[1].H[1]);",
        "2": " if (res1[1] s< 0) {",
        "3": "   res1[1] = 0;",
        "4": "   OV = 1;",
        "5": " } else if (res2[1] u> (2^16)-1) {",
        "6": "   res2[1] = (2^16)-1;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[1].H[1] = res1[1].H[0];",
        "10": " Rd.W[1].H[0] = res2[1].H[0];",
        "11": " for RV32, x=0",
        "12": " for RV64, x=1..0"
    },
    {
        "0": " res1[0] = ZE17(Rs1.W[0].H[1]) + ZE17(Rs2.W[0].H[1]);",
        "1": " res2[0] = ZE17(Rs1.W[0].H[0]) \u2013 ZE17(Rs2.W[0].H[0]);",
        "2": " if (res1[0] u> (2^16)-1) {",
        "3": "   res1[0] = (2^16)-1;",
        "4": "   OV = 1;",
        "5": " }",
        "6": " if (res2[0] s< 0) {",
        "7": "   res2[0] = 0;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.W[0].H[1] = res1[0].H[0];",
        "11": " Rd.W[0].H[0] = res2[0].H[0];",
        "12": " for RV32, x=0",
        "13": " for RV64, x=1..0"
    },
    {
        "0": " res1[1] = ZE17(Rs1.W[1].H[1]) + ZE17(Rs2.W[1].H[1]);",
        "1": " res2[1] = ZE17(Rs1.W[1].H[0]) \u2013 ZE17(Rs2.W[1].H[0]);",
        "2": " if (res1[1] u> (2^16)-1) {",
        "3": "   res1[1] = (2^16)-1;",
        "4": "   OV = 1;",
        "5": " }",
        "6": " if (res2[1] s< 0) {",
        "7": "   res2[1] = 0;",
        "8": "   OV = 1;",
        "9": " }",
        "10": " Rd.W[1].H[1] = res1[1].H[0];",
        "11": " Rd.W[1].H[0] = res2[1].H[0];",
        "12": " for RV32, x=0",
        "13": " for RV64, x=1..0"
    },
    {
        "0": " res1[0] = ZE17(Rs1.W[0].H[1]) - ZE17(Rs2.W[0].H[1]);",
        "1": " res2[0] = ZE17(Rs1.W[0].H[0]) + ZE17(Rs2.W[0].H[0]);",
        "2": " if (res1[0] s< 0) {",
        "3": "   res1[0] = 0;",
        "4": "   OV = 1;",
        "5": " } else if (res2[0] u> (2^16)-1) {",
        "6": "   res2[0] = (2^16)-1;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[0].H[1] = res1[0].H[0];",
        "10": " Rd.W[0].H[0] = res2[0].H[0];",
        "11": " for RV32, x=0",
        "12": " for RV64, x=1..0"
    },
    {
        "0": " res1[1] = ZE17(Rs1.W[1].H[1]) - ZE17(Rs2.W[1].H[1]);",
        "1": " res2[1] = ZE17(Rs1.W[1].H[0]) + ZE17(Rs2.W[1].H[0]);",
        "2": " if (res1[1] s< 0) {",
        "3": "   res1[1] = 0;",
        "4": "   OV = 1;",
        "5": " } else if (res2[1] u> (2^16)-1) {",
        "6": "   res2[1] = (2^16)-1;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[1].H[1] = res1[1].H[0];",
        "10": " Rd.W[1].H[0] = res2[1].H[0];",
        "11": " for RV32, x=0",
        "12": " for RV64, x=1..0"
    },
    {
        "0": " res[0] = ZE9(Rs1.B[0]) - ZE9(Rs2.B[0]);",
        "1": " if (res[0] s< 0) {",
        "2": "   res[0] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[0] = res[0].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[1] = ZE9(Rs1.B[1]) - ZE9(Rs2.B[1]);",
        "1": " if (res[1] s< 0) {",
        "2": "   res[1] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[1] = res[1].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[2] = ZE9(Rs1.B[2]) - ZE9(Rs2.B[2]);",
        "1": " if (res[2] s< 0) {",
        "2": "   res[2] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[2] = res[2].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[3] = ZE9(Rs1.B[3]) - ZE9(Rs2.B[3]);",
        "1": " if (res[3] s< 0) {",
        "2": "   res[3] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[3] = res[3].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[4] = ZE9(Rs1.B[4]) - ZE9(Rs2.B[4]);",
        "1": " if (res[4] s< 0) {",
        "2": "   res[4] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[4] = res[4].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[5] = ZE9(Rs1.B[5]) - ZE9(Rs2.B[5]);",
        "1": " if (res[5] s< 0) {",
        "2": "   res[5] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[5] = res[5].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[6] = ZE9(Rs1.B[6]) - ZE9(Rs2.B[6]);",
        "1": " if (res[6] s< 0) {",
        "2": "   res[6] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[6] = res[6].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[7] = ZE9(Rs1.B[7]) - ZE9(Rs2.B[7]);",
        "1": " if (res[7] s< 0) {",
        "2": "   res[7] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.B[7] = res[7].B[0];",
        "6": " for RV32: x=3..0,",
        "7": " for RV64: x=7..0"
    },
    {
        "0": " res[0] = ZE17(Rs1.H[0]) - ZE17(Rs2.H[0]);",
        "1": " if (res[0] s< 0) {",
        "2": "   res[0] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.H[0] = res[0].H[0];",
        "6": " for RV32: x=1..0,",
        "7": " for RV64: x=3..0"
    },
    {
        "0": " res[1] = ZE17(Rs1.H[1]) - ZE17(Rs2.H[1]);",
        "1": " if (res[1] s< 0) {",
        "2": "   res[1] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.H[1] = res[1].H[0];",
        "6": " for RV32: x=1..0,",
        "7": " for RV64: x=3..0"
    },
    {
        "0": " res[2] = ZE17(Rs1.H[2]) - ZE17(Rs2.H[2]);",
        "1": " if (res[2] s< 0) {",
        "2": "   res[2] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.H[2] = res[2].H[0];",
        "6": " for RV32: x=1..0,",
        "7": " for RV64: x=3..0"
    },
    {
        "0": " res[3] = ZE17(Rs1.H[3]) - ZE17(Rs2.H[3]);",
        "1": " if (res[3] s< 0) {",
        "2": "   res[3] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.H[3] = res[3].H[0];",
        "6": " for RV32: x=1..0,",
        "7": " for RV64: x=3..0"
    },
    {
        "0": " res[0] = Rd.W[0] + (Rs1.W[0].B[3] u* Rs2.W[0].B[3]) +",
        "1": "          (Rs1.W[0].B[2] u* Rs2.W[0].B[2]) + (Rs1.W[0].B[1] u* Rs2.W[0].B[1]) +",
        "2": "          (Rs1.W[0].B[0] u* Rs2.W[0].B[0]);",
        "3": " Rd.W[0] = res[0];",
        "4": " for RV32: x=0,",
        "5": " for RV64: x=1..0"
    },
    {
        "0": " res[1] = Rd.W[1] + (Rs1.W[1].B[3] u* Rs2.W[1].B[3]) +",
        "1": "          (Rs1.W[1].B[2] u* Rs2.W[1].B[2]) + (Rs1.W[1].B[1] u* Rs2.W[1].B[1]) +",
        "2": "          (Rs1.W[1].B[0] u* Rs2.W[1].B[0]);",
        "3": " Rd.W[1] = res[1];",
        "4": " for RV32: x=0,",
        "5": " for RV64: x=1..0"
    },
    {
        "0": " Rd.B[0] = (Rs1.B[0] >u Rs2.B[0])? Rs1.B[0] : Rs2.B[0];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = (Rs1.B[1] >u Rs2.B[1])? Rs1.B[1] : Rs2.B[1];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = (Rs1.B[2] >u Rs2.B[2])? Rs1.B[2] : Rs2.B[2];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = (Rs1.B[3] >u Rs2.B[3])? Rs1.B[3] : Rs2.B[3];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = (Rs1.B[4] >u Rs2.B[4])? Rs1.B[4] : Rs2.B[4];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = (Rs1.B[5] >u Rs2.B[5])? Rs1.B[5] : Rs2.B[5];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = (Rs1.B[6] >u Rs2.B[6])? Rs1.B[6] : Rs2.B[6];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = (Rs1.B[7] >u Rs2.B[7])? Rs1.B[7] : Rs2.B[7];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.H[0] = (Rs1.H[0] >u Rs2.H[0])? Rs1.H[0] : Rs2.H[0];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[1] = (Rs1.H[1] >u Rs2.H[1])? Rs1.H[1] : Rs2.H[1];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[2] = (Rs1.H[2] >u Rs2.H[2])? Rs1.H[2] : Rs2.H[2];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[3] = (Rs1.H[3] >u Rs2.H[3])? Rs1.H[3] : Rs2.H[3];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.B[0] = (Rs1.B[0] <u Rs2.B[0])? Rs1.B[0] : Rs2.B[0];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[1] = (Rs1.B[1] <u Rs2.B[1])? Rs1.B[1] : Rs2.B[1];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[2] = (Rs1.B[2] <u Rs2.B[2])? Rs1.B[2] : Rs2.B[2];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[3] = (Rs1.B[3] <u Rs2.B[3])? Rs1.B[3] : Rs2.B[3];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[4] = (Rs1.B[4] <u Rs2.B[4])? Rs1.B[4] : Rs2.B[4];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[5] = (Rs1.B[5] <u Rs2.B[5])? Rs1.B[5] : Rs2.B[5];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[6] = (Rs1.B[6] <u Rs2.B[6])? Rs1.B[6] : Rs2.B[6];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.B[7] = (Rs1.B[7] <u Rs2.B[7])? Rs1.B[7] : Rs2.B[7];",
        "1": " for RV32: x=3..0,",
        "2": " for RV64: x=7..0"
    },
    {
        "0": " Rd.H[0] = (Rs1.H[0] <u Rs2.H[0])? Rs1.H[0] : Rs2.H[0];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[1] = (Rs1.H[1] <u Rs2.H[1])? Rs1.H[1] : Rs2.H[1];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[2] = (Rs1.H[2] <u Rs2.H[2])? Rs1.H[2] : Rs2.H[2];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " Rd.H[3] = (Rs1.H[3] <u Rs2.H[3])? Rs1.H[3] : Rs2.H[3];",
        "1": " for RV32: x=1..0,",
        "2": " for RV64: x=3..0"
    },
    {
        "0": " res9[0] = (ZE9(Rs1.B[0]) + ZE9(Rs2.B[0])) u>> 1;",
        "1": " Rd.B[0] = res9[0].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[1] = (ZE9(Rs1.B[1]) + ZE9(Rs2.B[1])) u>> 1;",
        "1": " Rd.B[1] = res9[1].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[2] = (ZE9(Rs1.B[2]) + ZE9(Rs2.B[2])) u>> 1;",
        "1": " Rd.B[2] = res9[2].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[3] = (ZE9(Rs1.B[3]) + ZE9(Rs2.B[3])) u>> 1;",
        "1": " Rd.B[3] = res9[3].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[4] = (ZE9(Rs1.B[4]) + ZE9(Rs2.B[4])) u>> 1;",
        "1": " Rd.B[4] = res9[4].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[5] = (ZE9(Rs1.B[5]) + ZE9(Rs2.B[5])) u>> 1;",
        "1": " Rd.B[5] = res9[5].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[6] = (ZE9(Rs1.B[6]) + ZE9(Rs2.B[6])) u>> 1;",
        "1": " Rd.B[6] = res9[6].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[7] = (ZE9(Rs1.B[7]) + ZE9(Rs2.B[7])) u>> 1;",
        "1": " Rd.B[7] = res9[7].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res17[0] = (ZE17(Rs1.H[0]) + ZE17(Rs2.H[0])) u>> 1;",
        "1": " Rd.H[0] = res17[0].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[1] = (ZE17(Rs1.H[1]) + ZE17(Rs2.H[1])) u>> 1;",
        "1": " Rd.H[1] = res17[1].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[2] = (ZE17(Rs1.H[2]) + ZE17(Rs2.H[2])) u>> 1;",
        "1": " Rd.H[2] = res17[2].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[3] = (ZE17(Rs1.H[3]) + ZE17(Rs2.H[3])) u>> 1;",
        "1": " Rd.H[3] = res17[3].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res_add17[0] = (ZE17(Rs1.W[0].H[1]) + ZE17(Rs2.W[0].H[0])) u>> 1;",
        "1": " res_sub17[0] = (ZE17(Rs1.W[0].H[0]) \u2013 ZE17(Rs2.W[0].H[1])) u>> 1;",
        "2": " Rd.W[0].H[1] = res_add17[0].H[0];",
        "3": " Rd.W[0].H[0] = res_sub17[0].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_add17[1] = (ZE17(Rs1.W[1].H[1]) + ZE17(Rs2.W[1].H[0])) u>> 1;",
        "1": " res_sub17[1] = (ZE17(Rs1.W[1].H[0]) \u2013 ZE17(Rs2.W[1].H[1])) u>> 1;",
        "2": " Rd.W[1].H[1] = res_add17[1].H[0];",
        "3": " Rd.W[1].H[0] = res_sub17[1].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_sub17[0] = (ZE17(Rs1.W[0].H[1]) - ZE17(Rs2.W[0].H[0])) u>> 1;",
        "1": " res_add17[0] = (ZE17(Rs1.W[0].H[0]) + ZE17(Rs2.W[0].H[1])) u>> 1;",
        "2": " Rd.W[0].H[1] = res_sub17[0].H[0];",
        "3": " Rd.W[0].H[0] = res_add17[0].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_sub17[1] = (ZE17(Rs1.W[1].H[1]) - ZE17(Rs2.W[1].H[0])) u>> 1;",
        "1": " res_add17[1] = (ZE17(Rs1.W[1].H[0]) + ZE17(Rs2.W[1].H[1])) u>> 1;",
        "2": " Rd.W[1].H[1] = res_sub17[1].H[0];",
        "3": " Rd.W[1].H[0] = res_add17[1].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_add17[0] = (ZE17(Rs1.W[0].H[1]) + ZE17(Rs2.W[0].H[1])) u>> 1;",
        "1": " res_sub17[0] = (ZE17(Rs1.W[0].H[0]) \u2013 ZE17(Rs2.W[0].H[0])) u>> 1;",
        "2": " Rd.W[0].H[1] = res_add17[0].H[0];",
        "3": " Rd.W[0].H[0] = res_sub17[0].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_add17[1] = (ZE17(Rs1.W[1].H[1]) + ZE17(Rs2.W[1].H[1])) u>> 1;",
        "1": " res_sub17[1] = (ZE17(Rs1.W[1].H[0]) \u2013 ZE17(Rs2.W[1].H[0])) u>> 1;",
        "2": " Rd.W[1].H[1] = res_add17[1].H[0];",
        "3": " Rd.W[1].H[0] = res_sub17[1].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_sub17[0] = (ZE17(Rs1.W[0].H[1]) - ZE17(Rs2.W[0].H[1])) u>> 1;",
        "1": " res_add17[0] = (ZE17(Rs1.W[0].H[0]) + ZE17(Rs2.W[0].H[0])) u>> 1;",
        "2": " Rd.W[0].H[1] = res_sub17[0].H[0];",
        "3": " Rd.W[0].H[0] = res_add17[0].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res_sub17[1] = (ZE17(Rs1.W[1].H[1]) - ZE17(Rs2.W[1].H[1])) u>> 1;",
        "1": " res_add17[1] = (ZE17(Rs1.W[1].H[0]) + ZE17(Rs2.W[1].H[0])) u>> 1;",
        "2": " Rd.W[1].H[1] = res_sub17[1].H[0];",
        "3": " Rd.W[1].H[0] = res_add17[1].H[0];",
        "4": " for RV32, x=0",
        "5": " for RV64, x=1..0"
    },
    {
        "0": " res9[0] = (ZE9(Rs1.B[0]) - ZE9(Rs2.B[0])) u>> 1;",
        "1": " Rd.B[0] = res9[0].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[1] = (ZE9(Rs1.B[1]) - ZE9(Rs2.B[1])) u>> 1;",
        "1": " Rd.B[1] = res9[1].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[2] = (ZE9(Rs1.B[2]) - ZE9(Rs2.B[2])) u>> 1;",
        "1": " Rd.B[2] = res9[2].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[3] = (ZE9(Rs1.B[3]) - ZE9(Rs2.B[3])) u>> 1;",
        "1": " Rd.B[3] = res9[3].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[4] = (ZE9(Rs1.B[4]) - ZE9(Rs2.B[4])) u>> 1;",
        "1": " Rd.B[4] = res9[4].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[5] = (ZE9(Rs1.B[5]) - ZE9(Rs2.B[5])) u>> 1;",
        "1": " Rd.B[5] = res9[5].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[6] = (ZE9(Rs1.B[6]) - ZE9(Rs2.B[6])) u>> 1;",
        "1": " Rd.B[6] = res9[6].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res9[7] = (ZE9(Rs1.B[7]) - ZE9(Rs2.B[7])) u>> 1;",
        "1": " Rd.B[7] = res9[7].B[0];",
        "2": " for RV32: x=3..0,",
        "3": " for RV64: x=7..0"
    },
    {
        "0": " res17[0] = (ZE17(Rs1.H[0]) - ZE17(Rs2.H[0])) u>> 1;",
        "1": " Rd.H[0] = res17[0].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[1] = (ZE17(Rs1.H[1]) - ZE17(Rs2.H[1])) u>> 1;",
        "1": " Rd.H[1] = res17[1].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[2] = (ZE17(Rs1.H[2]) - ZE17(Rs2.H[2])) u>> 1;",
        "1": " Rd.H[2] = res17[2].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " res17[3] = (ZE17(Rs1.H[3]) - ZE17(Rs2.H[3])) u>> 1;",
        "1": " Rd.H[3] = res17[3].H[0];",
        "2": " for RV32: x=1..0,",
        "3": " for RV64: x=3..0"
    },
    {
        "0": " Rd.W[0] = Rs1.W[0] + Rs2.W[0];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[1] = Rs1.W[1] + Rs2.W[1];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " if (Rs1.W[0] s>= 0) {",
        "1": "   res[0] = Rs1.W[0];",
        "2": " } else {",
        "3": "   If (Rs1.W[0] == 0x80000000) {",
        "4": "     res[0] = 0x7fffffff;",
        "5": "     OV = 1;",
        "6": "   } else {",
        "7": "     res[0] = -Rs1.W[0];",
        "8": "   }",
        "9": " }",
        "10": " Rd.W[0] = res[0];",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " if (Rs1.W[1] s>= 0) {",
        "1": "   res[1] = Rs1.W[1];",
        "2": " } else {",
        "3": "   If (Rs1.W[1] == 0x80000000) {",
        "4": "     res[1] = 0x7fffffff;",
        "5": "     OV = 1;",
        "6": "   } else {",
        "7": "     res[1] = -Rs1.W[1];",
        "8": "   }",
        "9": " }",
        "10": " Rd.W[1] = res[1];",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " res33[0] = signed<33>(Rs2.W[0])",
        "1": " if (res33[0] s> (2^31)-1) {",
        "2": "   res33[0] = (2^31)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res33[0] s< -2^31) {",
        "5": "   res33[0] = -2^31;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.W[0] = res33[0].W[0];",
        "9": " for RV64: x=1..0"
    },
    {
        "0": " res33[1] = signed<33>(Rs2.W[1])",
        "1": " if (res33[1] s> (2^31)-1) {",
        "2": "   res33[1] = (2^31)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res33[1] s< -2^31) {",
        "5": "   res33[1] = -2^31;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.W[1] = res33[1].W[0];",
        "9": " for RV64: x=1..0"
    },
    {
        "0": " res[1] = signed<33>(Rs2.W[0])",
        "1": " res[0] = signed<33>(Rs2.W[1])",
        "2": " if (res[0] s> (2^31)-1) {",
        "3": "   res[0] = (2^31)-1;",
        "4": "   OV = 1;",
        "5": " } else if (res s< -2^31) {",
        "6": "   res[0] = -2^31;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[1] = res[1].W[0];",
        "10": " Rd.W[0] = res[0].W[0];",
        "11": " for RV64, x=1..0"
    },
    {
        "0": " res[1] = signed<33>(Rs2.W[0])",
        "1": " res[0] = signed<33>(Rs2.W[1])",
        "2": " if (res[1] s> (2^31)-1) {",
        "3": "   res[1] = (2^31)-1;",
        "4": "   OV = 1;",
        "5": " } else if (res s< -2^31) {",
        "6": "   res[1] = -2^31;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[1] = res[1].W[0];",
        "10": " Rd.W[0] = res[0].W[0];",
        "11": " for RV64, x=1..0"
    },
    {
        "0": " res[1] = signed<33>(Rs2.W[0])",
        "1": " res[0] = signed<33>(Rs2.W[1])",
        "2": " if (res[0] s> (2^31)-1) {",
        "3": "   res[0] = (2^31)-1;",
        "4": "   OV = 1;",
        "5": " } else if (res s< -2^31) {",
        "6": "   res[0] = -2^31;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[1] = res[1].W[0];",
        "10": " Rd.W[0] = res[0].W[0];",
        "11": " for RV64, x=1..0"
    },
    {
        "0": " res[1] = signed<33>(Rs2.W[0])",
        "1": " res[0] = signed<33>(Rs2.W[1])",
        "2": " if (res[1] s> (2^31)-1) {",
        "3": "   res[1] = (2^31)-1;",
        "4": "   OV = 1;",
        "5": " } else if (res s< -2^31) {",
        "6": "   res[1] = -2^31;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[1] = res[1].W[0];",
        "10": " Rd.W[0] = res[0].W[0];",
        "11": " for RV64, x=1..0"
    },
    {
        "0": " sa = Rs2[4:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(31+sa):0] = Rs1.W[0] << sa;",
        "3": "   if (res s> (2^31)-1) {",
        "4": "     res = 0x7fffffff; OV = 1;",
        "5": "   } else if (res s< -2^31) {",
        "6": "     res = 0x80000000; OV = 1;",
        "7": "   }",
        "8": "   Rd.W[0] = res.W[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV64: x=1..0"
    },
    {
        "0": " sa = Rs2[4:0];",
        "1": " if (sa != 0) {",
        "2": "   res[(31+sa):0] = Rs1.W[1] << sa;",
        "3": "   if (res s> (2^31)-1) {",
        "4": "     res = 0x7fffffff; OV = 1;",
        "5": "   } else if (res s< -2^31) {",
        "6": "     res = 0x80000000; OV = 1;",
        "7": "   }",
        "8": "   Rd.W[1] = res.W[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV64: x=1..0"
    },
    {
        "0": " sa = imm5u;",
        "1": " if (sa != 0) {",
        "2": "   res[(31+sa):0] = Rs1.W[0] << sa;",
        "3": "   if (res s> (2^31)-1) {",
        "4": "     res = 0x7fffffff; OV = 1;",
        "5": "   } else if (res s< -2^31) {",
        "6": "     res = 0x80000000; OV = 1;",
        "7": "   }",
        "8": "   Rd.W[0] = res.W[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV64: x=1..0"
    },
    {
        "0": " sa = imm5u;",
        "1": " if (sa != 0) {",
        "2": "   res[(31+sa):0] = Rs1.W[1] << sa;",
        "3": "   if (res s> (2^31)-1) {",
        "4": "     res = 0x7fffffff; OV = 1;",
        "5": "   } else if (res s< -2^31) {",
        "6": "     res = 0x80000000; OV = 1;",
        "7": "   }",
        "8": "   Rd.W[1] = res.W[0];",
        "9": " } else {",
        "10": "   Rd = Rs1;",
        "11": " }",
        "12": " for RV64: x=1..0"
    },
    {
        "0": " if (Rs2[5:0] s< 0) {",
        "1": "   sa = -Rs2[5:0];",
        "2": "   sa = (sa == 32)? 31 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[31:-1] = signed<33>(Rs1.W[0][31:sa-1])",
        "5": "     Rd.W[0] = res[31:0];",
        "6": "   } else {",
        "7": "     Rd.W[0] = signed<32>(Rs1.W[0][31:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[4:0];",
        "11": "   res[(31+sa):0] = Rs1.W[0] u<< sa;",
        "12": "   if (res s> (2^31)-1) {",
        "13": "     res[31:0] = 0x7fffffff; OV = 1;",
        "14": "   } else if (res s< -2^31) {",
        "15": "     res[31:0] = 0x80000000; OV = 1;",
        "16": "   }",
        "17": "   Rd.W[0] = res.W[0];",
        "18": " }",
        "19": " for RV64: x=1..0"
    },
    {
        "0": " if (Rs2[5:0] s< 0) {",
        "1": "   sa = -Rs2[5:0];",
        "2": "   sa = (sa == 32)? 31 : sa;",
        "3": "   if (\u201c.u\u201d form) {",
        "4": "     res[31:-1] = signed<33>(Rs1.W[1][31:sa-1])",
        "5": "     Rd.W[1] = res[31:0];",
        "6": "   } else {",
        "7": "     Rd.W[1] = signed<32>(Rs1.W[1][31:sa])",
        "8": "   }",
        "9": " } else {",
        "10": "   sa = Rs2[4:0];",
        "11": "   res[(31+sa):0] = Rs1.W[1] u<< sa;",
        "12": "   if (res s> (2^31)-1) {",
        "13": "     res[31:0] = 0x7fffffff; OV = 1;",
        "14": "   } else if (res s< -2^31) {",
        "15": "     res[31:0] = 0x80000000; OV = 1;",
        "16": "   }",
        "17": "   Rd.W[1] = res.W[0];",
        "18": " }",
        "19": " for RV64: x=1..0"
    },
    {
        "0": " res[1] = signed<33>(Rs2.W[1])",
        "1": " res[0] = signed<33>(Rs2.W[0])",
        "2": " if (res[0] s> (2^31)-1) {",
        "3": "   res[0] = (2^31)-1;",
        "4": "   OV = 1;",
        "5": " } else if (res[0] s< -2^31) {",
        "6": "   res[0] = -2^31;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[1] = res[1].W[0];",
        "10": " Rd.W[0] = res[0].W[0];",
        "11": " for RV64, x=1..0"
    },
    {
        "0": " res[1] = signed<33>(Rs2.W[1])",
        "1": " res[0] = signed<33>(Rs2.W[0])",
        "2": " if (res[1] s> (2^31)-1) {",
        "3": "   res[1] = (2^31)-1;",
        "4": "   OV = 1;",
        "5": " } else if (res[1] s< -2^31) {",
        "6": "   res[1] = -2^31;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[1] = res[1].W[0];",
        "10": " Rd.W[0] = res[0].W[0];",
        "11": " for RV64, x=1..0"
    },
    {
        "0": " res[1] = signed<33>(Rs2.W[1])",
        "1": " res[0] = signed<33>(Rs2.W[0])",
        "2": " if (res[0] s> (2^31)-1) {",
        "3": "   res[0] = (2^31)-1;",
        "4": "   OV = 1;",
        "5": " } else if (res[0] s< -2^31) {",
        "6": "   res[0] = -2^31;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[1] = res[1].W[0];",
        "10": " Rd.W[0] = res[0].W[0];",
        "11": " for RV64, x=1..0"
    },
    {
        "0": " res[1] = signed<33>(Rs2.W[1])",
        "1": " res[0] = signed<33>(Rs2.W[0])",
        "2": " if (res[1] s> (2^31)-1) {",
        "3": "   res[1] = (2^31)-1;",
        "4": "   OV = 1;",
        "5": " } else if (res[1] s< -2^31) {",
        "6": "   res[1] = -2^31;",
        "7": "   OV = 1;",
        "8": " }",
        "9": " Rd.W[1] = res[1].W[0];",
        "10": " Rd.W[0] = res[0].W[0];",
        "11": " for RV64, x=1..0"
    },
    {
        "0": " res[0] = signed<33>(Rs2.W[0])",
        "1": " if (res[0] s> (2^31)-1) {",
        "2": "   res[0] = (2^31)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[0] s< -2^31) {",
        "5": "   res[0] = -2^31;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.W[0] = res[0].W[0];",
        "9": " for RV64: x=1..0"
    },
    {
        "0": " res[1] = signed<33>(Rs2.W[1])",
        "1": " if (res[1] s> (2^31)-1) {",
        "2": "   res[1] = (2^31)-1;",
        "3": "   OV = 1;",
        "4": " } else if (res[1] s< -2^31) {",
        "5": "   res[1] = -2^31;",
        "6": "   OV = 1;",
        "7": " }",
        "8": " Rd.W[1] = res[1].W[0];",
        "9": " for RV64: x=1..0"
    },
    {
        "0": " res33[0] = signed<33>(Rs2.W[0])",
        "1": " Rd.W[0] = res33[0].W[0];",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " res33[1] = signed<33>(Rs2.W[1])",
        "1": " Rd.W[1] = res33[1].W[0];",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " res33[0] = signed<33>(Rs2.W[0])",
        "1": " Rd.W[0] = res33[0].W[0];",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " res33[1] = signed<33>(Rs2.W[1])",
        "1": " Rd.W[1] = res33[1].W[0];",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " sa = Rs2[4:0];",
        "1": " Rd.W[0] = Rs1.W[0] << sa;",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " sa = Rs2[4:0];",
        "1": " Rd.W[1] = Rs1.W[1] << sa;",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " sa = imm5u;",
        "1": " Rd.W[0] = Rs1.W[0] << sa;",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " sa = imm5u;",
        "1": " Rd.W[1] = Rs1.W[1] << sa;",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[0] = (Rs1.W[0] s> Rs2.W[0])? Rs1.W[0] : Rs2.W[0];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[1] = (Rs1.W[1] s> Rs2.W[1])? Rs1.W[1] : Rs2.W[1];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[0] = (Rs1.W[0] s< Rs2.W[0])? Rs1.W[0] : Rs2.W[0];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[1] = (Rs1.W[1] s< Rs2.W[1])? Rs1.W[1] : Rs2.W[1];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " sa = Rs2[4:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA32.u",
        "3": "     res[31:-1] = signed<33>(Rs1.W[0][31:sa-1])",
        "4": "     Rd.W[0] = res[31:0];",
        "5": "   else { // SRA32",
        "6": "     Rd.W[0] = signed<32>(Rs1.W[0][31:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " sa = Rs2[4:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRA32.u",
        "3": "     res[31:-1] = signed<33>(Rs1.W[1][31:sa-1])",
        "4": "     Rd.W[1] = res[31:0];",
        "5": "   else { // SRA32",
        "6": "     Rd.W[1] = signed<32>(Rs1.W[1][31:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " sa = imm5u;",
        "1": "   if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRAI32.u",
        "3": "     res[31:-1] = signed<33>(Rs1.W[0][31:sa-1])",
        "4": "     Rd.W[0] = res[31:0];",
        "5": "   else { // SRAI32",
        "6": "     Rd.W[0] = signed<32>(Rs1.W[0][31:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " sa = imm5u;",
        "1": "   if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRAI32.u",
        "3": "     res[31:-1] = signed<33>(Rs1.W[1][31:sa-1])",
        "4": "     Rd.W[1] = res[31:0];",
        "5": "   else { // SRAI32",
        "6": "     Rd.W[1] = signed<32>(Rs1.W[1][31:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " sa = Rs2[4:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRL32.u",
        "3": "     res[31:-1] = ZE33(Rs1.W[0][31:sa-1]) + 1;",
        "4": "     Rd.W[0] = res[31:0];",
        "5": "   else { // SRL32",
        "6": "     Rd.W[0] = ZE32(Rs1.W[0][31:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " sa = Rs2[4:0];",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRL32.u",
        "3": "     res[31:-1] = ZE33(Rs1.W[1][31:sa-1]) + 1;",
        "4": "     Rd.W[1] = res[31:0];",
        "5": "   else { // SRL32",
        "6": "     Rd.W[1] = ZE32(Rs1.W[1][31:sa])",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " sa = imm5u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI32.u",
        "3": "     res[31:-1] = ZE33(Rs1.W[0][31:sa-1]) + 1;",
        "4": "     Rd.W[0] = res[31:0];",
        "5": "   else { // SRLI32",
        "6": "     Rd.W[0] = ZE32(Rs1.W[0][31:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " sa = imm5u;",
        "1": " if (sa != 0) {",
        "2": "   if (\u201c.u\u201d form) { // SRLI32.u",
        "3": "     res[31:-1] = ZE33(Rs1.W[1][31:sa-1]) + 1;",
        "4": "     Rd.W[1] = res[31:0];",
        "5": "   else { // SRLI32",
        "6": "     Rd.W[1] = ZE32(Rs1.W[1][31:sa]);",
        "7": "   }",
        "8": " } else {",
        "9": "   Rd = Rs1;",
        "10": " }",
        "11": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[0] = Rs1.W[0] - Rs2.W[0];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[1] = Rs1.W[1] - Rs2.W[1];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " res33[0] = ZE33(Rs1.W[0]) + ZE33(Rs2.W[0]);",
        "1": " if (res33[0] u> (2^32)-1) {",
        "2": "   res33[0] = (2^32)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.W[0] = res33[0].W[0];",
        "6": " for RV64: x=1..0"
    },
    {
        "0": " res33[1] = ZE33(Rs1.W[1]) + ZE33(Rs2.W[1]);",
        "1": " if (res33[1] u> (2^32)-1) {",
        "2": "   res33[1] = (2^32)-1;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.W[1] = res33[1].W[0];",
        "6": " for RV64: x=1..0"
    },
    {
        "0": " res[0] = ZE33(Rs1.W[0]) - ZE33(Rs2.W[0]);",
        "1": " if (res[0] s< 0) {",
        "2": "   res[0] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.W[0] = res[0].W[0];",
        "6": " for RV64: x=1..0"
    },
    {
        "0": " res[1] = ZE33(Rs1.W[1]) - ZE33(Rs2.W[1]);",
        "1": " if (res[1] s< 0) {",
        "2": "   res[1] = 0;",
        "3": "   OV = 1;",
        "4": " }",
        "5": " Rd.W[1] = res[1].W[0];",
        "6": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[0] = (Rs1.W[0] u> Rs2.W[0])? Rs1.W[0] : Rs2.W[0];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[1] = (Rs1.W[1] u> Rs2.W[1])? Rs1.W[1] : Rs2.W[1];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[0] = (Rs1.W[0] <u Rs2.W[0])? Rs1.W[0] : Rs2.W[0];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " Rd.W[1] = (Rs1.W[1] <u Rs2.W[1])? Rs1.W[1] : Rs2.W[1];",
        "1": " for RV64: x=1..0"
    },
    {
        "0": " res33[0] = (ZE33(Rs1.W[0]) + ZE33(Rs2.W[0])) u>> 1;",
        "1": " Rd.W[0] = res33[0].W[0];",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " res33[1] = (ZE33(Rs1.W[1]) + ZE33(Rs2.W[1])) u>> 1;",
        "1": " Rd.W[1] = res33[1].W[0];",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " res33[0] = (ZE33(Rs1.W[0]) - ZE33(Rs2.W[0])) u>> 1;",
        "1": " Rd.W[0] = res33[0].W[0];",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " res33[1] = (ZE33(Rs1.W[1]) - ZE33(Rs2.W[1])) u>> 1;",
        "1": " Rd.W[1] = res33[1].W[0];",
        "2": " for RV64: x=1..0"
    },
    {
        "0": " Rd[0] = Rc[0]? Rs1[0] : Rs2[0];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[1] = Rc[1]? Rs1[1] : Rs2[1];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[2] = Rc[2]? Rs1[2] : Rs2[2];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[3] = Rc[3]? Rs1[3] : Rs2[3];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[4] = Rc[4]? Rs1[4] : Rs2[4];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[5] = Rc[5]? Rs1[5] : Rs2[5];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[6] = Rc[6]? Rs1[6] : Rs2[6];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[7] = Rc[7]? Rs1[7] : Rs2[7];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[8] = Rc[8]? Rs1[8] : Rs2[8];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[9] = Rc[9]? Rs1[9] : Rs2[9];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[10] = Rc[10]? Rs1[10] : Rs2[10];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[11] = Rc[11]? Rs1[11] : Rs2[11];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[12] = Rc[12]? Rs1[12] : Rs2[12];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[13] = Rc[13]? Rs1[13] : Rs2[13];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[14] = Rc[14]? Rs1[14] : Rs2[14];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[15] = Rc[15]? Rs1[15] : Rs2[15];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[16] = Rc[16]? Rs1[16] : Rs2[16];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[17] = Rc[17]? Rs1[17] : Rs2[17];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[18] = Rc[18]? Rs1[18] : Rs2[18];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[19] = Rc[19]? Rs1[19] : Rs2[19];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[20] = Rc[20]? Rs1[20] : Rs2[20];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[21] = Rc[21]? Rs1[21] : Rs2[21];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[22] = Rc[22]? Rs1[22] : Rs2[22];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[23] = Rc[23]? Rs1[23] : Rs2[23];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[24] = Rc[24]? Rs1[24] : Rs2[24];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[25] = Rc[25]? Rs1[25] : Rs2[25];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[26] = Rc[26]? Rs1[26] : Rs2[26];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[27] = Rc[27]? Rs1[27] : Rs2[27];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[28] = Rc[28]? Rs1[28] : Rs2[28];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[29] = Rc[29]? Rs1[29] : Rs2[29];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[30] = Rc[30]? Rs1[30] : Rs2[30];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[31] = Rc[31]? Rs1[31] : Rs2[31];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[32] = Rc[32]? Rs1[32] : Rs2[32];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[33] = Rc[33]? Rs1[33] : Rs2[33];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[34] = Rc[34]? Rs1[34] : Rs2[34];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[35] = Rc[35]? Rs1[35] : Rs2[35];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[36] = Rc[36]? Rs1[36] : Rs2[36];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[37] = Rc[37]? Rs1[37] : Rs2[37];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[38] = Rc[38]? Rs1[38] : Rs2[38];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[39] = Rc[39]? Rs1[39] : Rs2[39];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[40] = Rc[40]? Rs1[40] : Rs2[40];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[41] = Rc[41]? Rs1[41] : Rs2[41];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[42] = Rc[42]? Rs1[42] : Rs2[42];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[43] = Rc[43]? Rs1[43] : Rs2[43];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[44] = Rc[44]? Rs1[44] : Rs2[44];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[45] = Rc[45]? Rs1[45] : Rs2[45];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[46] = Rc[46]? Rs1[46] : Rs2[46];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[47] = Rc[47]? Rs1[47] : Rs2[47];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[48] = Rc[48]? Rs1[48] : Rs2[48];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[49] = Rc[49]? Rs1[49] : Rs2[49];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[50] = Rc[50]? Rs1[50] : Rs2[50];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[51] = Rc[51]? Rs1[51] : Rs2[51];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[52] = Rc[52]? Rs1[52] : Rs2[52];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[53] = Rc[53]? Rs1[53] : Rs2[53];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[54] = Rc[54]? Rs1[54] : Rs2[54];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[55] = Rc[55]? Rs1[55] : Rs2[55];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[56] = Rc[56]? Rs1[56] : Rs2[56];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[57] = Rc[57]? Rs1[57] : Rs2[57];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[58] = Rc[58]? Rs1[58] : Rs2[58];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[59] = Rc[59]? Rs1[59] : Rs2[59];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[60] = Rc[60]? Rs1[60] : Rs2[60];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[61] = Rc[61]? Rs1[61] : Rs2[61];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[62] = Rc[62]? Rs1[62] : Rs2[62];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    },
    {
        "0": " Rd[63] = Rc[63]? Rs1[63] : Rs2[63];",
        "1": " for RV32, x=31..0",
        "2": " for RV64, x=63..0"
    }
]